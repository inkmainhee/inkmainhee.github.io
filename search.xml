<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>putty样式更改</title>
      <link href="/2019/08/07/putty-yang-shi-geng-gai/"/>
      <url>/2019/08/07/putty-yang-shi-geng-gai/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考网址 <a href="https://www.cnblogs.com/mujingyu/p/7704666.html" target="_blank" rel="noopener">https://www.cnblogs.com/mujingyu/p/7704666.html</a></p></blockquote><h2 id="putty-默认颜色样式修改-for-windows"><a href="#putty-默认颜色样式修改-for-windows" class="headerlink" title="putty 默认颜色样式修改 for windows"></a>putty 默认颜色样式修改 for windows</h2><h3 id="第一点-导出-putty-注册表默认配置文件"><a href="#第一点-导出-putty-注册表默认配置文件" class="headerlink" title="第一点 导出 putty 注册表默认配置文件"></a>第一点 导出 putty 注册表默认配置文件</h3><h4 id="1-1-打开注册表：运行-–-gt-regedit"><a href="#1-1-打开注册表：运行-–-gt-regedit" class="headerlink" title="1.1 打开注册表：运行 –&gt; regedit"></a>1.1 打开注册表：运行 –&gt; regedit</h4><pre><code>找到 putty 注册表文件[HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\Default%20Settings]</code></pre><blockquote><p>注： 保存之后才会出</p></blockquote><h4 id="1-2-右键-Default-20Settings-文件，点击导出至桌面。"><a href="#1-2-右键-Default-20Settings-文件，点击导出至桌面。" class="headerlink" title="1.2 右键 Default%20Settings 文件，点击导出至桌面。"></a>1.2 右键 Default%20Settings 文件，点击导出至桌面。</h4><h3 id="第二点-修改注册表默认配置"><a href="#第二点-修改注册表默认配置" class="headerlink" title="第二点 修改注册表默认配置"></a>第二点 修改注册表默认配置</h3><h4 id="2-1-把导出的-reg-文件用文本方式打开，上面标注的-所有-Colour-值覆盖替换下面的值："><a href="#2-1-把导出的-reg-文件用文本方式打开，上面标注的-所有-Colour-值覆盖替换下面的值：" class="headerlink" title="2.1 把导出的 reg 文件用文本方式打开，上面标注的 所有 Colour 值覆盖替换下面的值："></a>2.1 把导出的 reg 文件用文本方式打开，上面标注的 所有 Colour 值覆盖替换下面的值：</h4><pre><code>&quot;Colour0&quot;=&quot;255,255,255&quot;&quot;Colour1&quot;=&quot;255,255,255&quot;&quot;Colour2&quot;=&quot;51,51,51&quot;&quot;Colour3&quot;=&quot;85,85,85&quot;&quot;Colour4&quot;=&quot;0,0,0&quot;&quot;Colour5&quot;=&quot;0,255,0&quot;&quot;Colour6&quot;=&quot;77,77,77&quot;&quot;Colour7&quot;=&quot;85,85,85&quot;&quot;Colour8&quot;=&quot;187,0,0&quot;&quot;Colour9&quot;=&quot;255,85,85&quot;&quot;Colour10&quot;=&quot;152,251,152&quot;&quot;Colour11&quot;=&quot;85,255,85&quot;&quot;Colour12&quot;=&quot;240,230,140&quot;&quot;Colour13&quot;=&quot;255,255,85&quot;&quot;Colour14&quot;=&quot;205,133,63&quot;&quot;Colour15&quot;=&quot;135,206,235&quot;&quot;Colour16&quot;=&quot;255,222,173&quot;&quot;Colour17&quot;=&quot;255,85,255&quot;&quot;Colour18&quot;=&quot;255,160,160&quot;&quot;Colour19&quot;=&quot;255,215,0&quot;&quot;Colour20&quot;=&quot;245,222,179&quot;&quot;Colour21&quot;=&quot;255,255,255&quot;</code></pre><h4 id="2-2-将配置好文件再导入注册表里就行了。"><a href="#2-2-将配置好文件再导入注册表里就行了。" class="headerlink" title="2.2 将配置好文件再导入注册表里就行了。"></a>2.2 将配置好文件再导入注册表里就行了。</h4>]]></content>
      
      
      <categories>
          
          <category> windows工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows工具 </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++语言学习</title>
      <link href="/2019/08/07/c-yu-yan-xue-xi/"/>
      <url>/2019/08/07/c-yu-yan-xue-xi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c语言深入学习</title>
      <link href="/2019/08/07/c-yu-yan-shen-ru-xue-xi/"/>
      <url>/2019/08/07/c-yu-yan-shen-ru-xue-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>逆向工程入门</title>
      <link href="/2019/08/07/ni-xiang-gong-cheng-ru-men/"/>
      <url>/2019/08/07/ni-xiang-gong-cheng-ru-men/</url>
      
        <content type="html"><![CDATA[<h2 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h2><h3 id="第一点"><a href="#第一点" class="headerlink" title="第一点"></a>第一点</h3><h6 id="具备基本的编程能力，如c、c-，c、c-作为很基础的语言，不要求精通，但是必须会写，写个小工具完全没有问题，同时要对c-的类、继承、虚表虚函数等很熟悉，很多游戏都用c-开发，而且比较庞大，只有基础掌握好，才能更好的从汇编层来读懂代码，很多时候我们看单条汇编指令时完全没有问题的，但是一旦组合起来就会完全不知所云了，通过必须对高级语言对应的汇编语言实现要掌握，比如函数工作的原理，几种调用约定、参数传递方式以及返回值等都必须掌握，这方面网上很多资料。最好能懂python，python作为一种脚本语言，可以用来开发许多逆向调试工具的插件，可以帮我们节省很多的体力活。"><a href="#具备基本的编程能力，如c、c-，c、c-作为很基础的语言，不要求精通，但是必须会写，写个小工具完全没有问题，同时要对c-的类、继承、虚表虚函数等很熟悉，很多游戏都用c-开发，而且比较庞大，只有基础掌握好，才能更好的从汇编层来读懂代码，很多时候我们看单条汇编指令时完全没有问题的，但是一旦组合起来就会完全不知所云了，通过必须对高级语言对应的汇编语言实现要掌握，比如函数工作的原理，几种调用约定、参数传递方式以及返回值等都必须掌握，这方面网上很多资料。最好能懂python，python作为一种脚本语言，可以用来开发许多逆向调试工具的插件，可以帮我们节省很多的体力活。" class="headerlink" title="具备基本的编程能力，如c、c++，c、c++作为很基础的语言，不要求精通，但是必须会写，写个小工具完全没有问题，同时要对c++的类、继承、虚表虚函数等很熟悉，很多游戏都用c++开发，而且比较庞大，只有基础掌握好，才能更好的从汇编层来读懂代码，很多时候我们看单条汇编指令时完全没有问题的，但是一旦组合起来就会完全不知所云了，通过必须对高级语言对应的汇编语言实现要掌握，比如函数工作的原理，几种调用约定、参数传递方式以及返回值等都必须掌握，这方面网上很多资料。最好能懂python，python作为一种脚本语言，可以用来开发许多逆向调试工具的插件，可以帮我们节省很多的体力活。"></a>具备基本的编程能力，如c、c++，c、c++作为很基础的语言，不要求精通，但是必须会写，写个小工具完全没有问题，同时要对c++的类、继承、虚表虚函数等很熟悉，很多游戏都用c++开发，而且比较庞大，只有基础掌握好，才能更好的从汇编层来读懂代码，很多时候我们看单条汇编指令时完全没有问题的，但是一旦组合起来就会完全不知所云了，通过必须对高级语言对应的汇编语言实现要掌握，比如函数工作的原理，几种调用约定、参数传递方式以及返回值等都必须掌握，这方面网上很多资料。最好能懂python，python作为一种脚本语言，可以用来开发许多逆向调试工具的插件，可以帮我们节省很多的体力活。</h6><h3 id="第二点"><a href="#第二点" class="headerlink" title="第二点"></a>第二点</h3><h5 id="对windows系统知识比较了解，因为外挂会设计比较多的windows系统知识，因此要对windows底层要一定的掌握，比如windows-api，以及外观常用的注入、钩子技术还有windows系统的异常处理机制等，可以到广海论坛学习外挂常用的较按键精灵、加速齿轮以及注入等同用知识，书籍可以可以参见《windows核心编程》，对底层知识了解越多，分析外挂技术也越容易。3、对逆向分析工具的熟练使用，我们平时工作中面对的是二进制可执行程序，要做外挂我们首先的分析目标程序，因此对常用的调试工具windbg、ollydbg、静态分析工具ida一定要熟练使用。网上教程也比较多，可以到看雪论坛上利用相关的crackme练手学习"><a href="#对windows系统知识比较了解，因为外挂会设计比较多的windows系统知识，因此要对windows底层要一定的掌握，比如windows-api，以及外观常用的注入、钩子技术还有windows系统的异常处理机制等，可以到广海论坛学习外挂常用的较按键精灵、加速齿轮以及注入等同用知识，书籍可以可以参见《windows核心编程》，对底层知识了解越多，分析外挂技术也越容易。3、对逆向分析工具的熟练使用，我们平时工作中面对的是二进制可执行程序，要做外挂我们首先的分析目标程序，因此对常用的调试工具windbg、ollydbg、静态分析工具ida一定要熟练使用。网上教程也比较多，可以到看雪论坛上利用相关的crackme练手学习" class="headerlink" title="对windows系统知识比较了解，因为外挂会设计比较多的windows系统知识，因此要对windows底层要一定的掌握，比如windows api，以及外观常用的注入、钩子技术还有windows系统的异常处理机制等，可以到广海论坛学习外挂常用的较按键精灵、加速齿轮以及注入等同用知识，书籍可以可以参见《windows核心编程》，对底层知识了解越多，分析外挂技术也越容易。3、对逆向分析工具的熟练使用，我们平时工作中面对的是二进制可执行程序，要做外挂我们首先的分析目标程序，因此对常用的调试工具windbg、ollydbg、静态分析工具ida一定要熟练使用。网上教程也比较多，可以到看雪论坛上利用相关的crackme练手学习"></a>对windows系统知识比较了解，因为外挂会设计比较多的windows系统知识，因此要对windows底层要一定的掌握，比如windows api，以及外观常用的注入、钩子技术还有windows系统的异常处理机制等，可以到广海论坛学习外挂常用的较按键精灵、加速齿轮以及注入等同用知识，书籍可以可以参见《windows核心编程》，对底层知识了解越多，分析外挂技术也越容易。3、对逆向分析工具的熟练使用，我们平时工作中面对的是二进制可执行程序，要做外挂我们首先的分析目标程序，因此对常用的调试工具windbg、ollydbg、静态分析工具ida一定要熟练使用。网上教程也比较多，可以到看雪论坛上利用相关的crackme练手学习</h5><h3 id="第三点"><a href="#第三点" class="headerlink" title="第三点"></a>第三点</h3><h5 id="掌握外壳原理和技巧，熟悉常见的加解密算法、反调试技巧，我们分析程序时经常会遇到很多加壳程序，因此我们必须对外壳的原理和基本知识比较熟悉，熟练掌握同用的脱壳技巧，同时对各种反调试技巧也必须要很熟悉，在分析程序时，一般会遇到很多加解密算法，因此必须要对各种加解密算法的特征有一定的快速识别能力，这样能更快得帮助我们分析目标程序的核心功能。这方面可以参看《加密与解密》这本书，讲的非常好与详细"><a href="#掌握外壳原理和技巧，熟悉常见的加解密算法、反调试技巧，我们分析程序时经常会遇到很多加壳程序，因此我们必须对外壳的原理和基本知识比较熟悉，熟练掌握同用的脱壳技巧，同时对各种反调试技巧也必须要很熟悉，在分析程序时，一般会遇到很多加解密算法，因此必须要对各种加解密算法的特征有一定的快速识别能力，这样能更快得帮助我们分析目标程序的核心功能。这方面可以参看《加密与解密》这本书，讲的非常好与详细" class="headerlink" title="掌握外壳原理和技巧，熟悉常见的加解密算法、反调试技巧，我们分析程序时经常会遇到很多加壳程序，因此我们必须对外壳的原理和基本知识比较熟悉，熟练掌握同用的脱壳技巧，同时对各种反调试技巧也必须要很熟悉，在分析程序时，一般会遇到很多加解密算法，因此必须要对各种加解密算法的特征有一定的快速识别能力，这样能更快得帮助我们分析目标程序的核心功能。这方面可以参看《加密与解密》这本书，讲的非常好与详细"></a>掌握外壳原理和技巧，熟悉常见的加解密算法、反调试技巧，我们分析程序时经常会遇到很多加壳程序，因此我们必须对外壳的原理和基本知识比较熟悉，熟练掌握同用的脱壳技巧，同时对各种反调试技巧也必须要很熟悉，在分析程序时，一般会遇到很多加解密算法，因此必须要对各种加解密算法的特征有一定的快速识别能力，这样能更快得帮助我们分析目标程序的核心功能。这方面可以参看《加密与解密》这本书，讲的非常好与详细</h5>]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
          <category> 漏洞挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-信息收集</title>
      <link href="/2019/08/06/shen-tou-ce-shi-xin-xi-shou-ji/"/>
      <url>/2019/08/06/shen-tou-ce-shi-xin-xi-shou-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="一、基本信息收集"><a href="#一、基本信息收集" class="headerlink" title="一、基本信息收集"></a>一、基本信息收集</h1><h2 id="1-1-Whois查询"><a href="#1-1-Whois查询" class="headerlink" title="1.1 Whois查询"></a>1.1 Whois查询</h2><pre><code>&gt; 根据已知域名反查，分析出此域名的注册人、邮箱、电话等，可通过知道域名注册商对其进行社工，或利用管理员邮箱进行伪装邮件达到欺骗的目的。http://whois.chinaz.com/</code></pre><h5 id="通过Whois查询可以获取网站管理员的手机号码、姓名、邮箱、域名注册商等信息。"><a href="#通过Whois查询可以获取网站管理员的手机号码、姓名、邮箱、域名注册商等信息。" class="headerlink" title="通过Whois查询可以获取网站管理员的手机号码、姓名、邮箱、域名注册商等信息。"></a>通过Whois查询可以获取网站管理员的手机号码、姓名、邮箱、域名注册商等信息。</h5><h6 id="利用查询到网站管理员手机号码、姓名、邮箱通过Whois反查查询出网站管理员所注册过的域名，可以对注册的其他域名进行漏洞挖掘。"><a href="#利用查询到网站管理员手机号码、姓名、邮箱通过Whois反查查询出网站管理员所注册过的域名，可以对注册的其他域名进行漏洞挖掘。" class="headerlink" title="利用查询到网站管理员手机号码、姓名、邮箱通过Whois反查查询出网站管理员所注册过的域名，可以对注册的其他域名进行漏洞挖掘。"></a>利用查询到网站管理员手机号码、姓名、邮箱通过Whois反查查询出网站管理员所注册过的域名，可以对注册的其他域名进行漏洞挖掘。</h6><h2 id="1-2-子域名收集"><a href="#1-2-子域名收集" class="headerlink" title="1.2 子域名收集"></a>1.2 子域名收集</h2><h4 id="当主站挖掘不到漏洞后，利用工具查询网站的子域名，逐个分析每个子站存在的漏洞，对存在的漏洞进行利用。"><a href="#当主站挖掘不到漏洞后，利用工具查询网站的子域名，逐个分析每个子站存在的漏洞，对存在的漏洞进行利用。" class="headerlink" title="当主站挖掘不到漏洞后，利用工具查询网站的子域名，逐个分析每个子站存在的漏洞，对存在的漏洞进行利用。"></a>当主站挖掘不到漏洞后，利用工具查询网站的子域名，逐个分析每个子站存在的漏洞，对存在的漏洞进行利用。</h4><h5 id="layer子域名挖掘机"><a href="#layer子域名挖掘机" class="headerlink" title="layer子域名挖掘机"></a>layer子域名挖掘机</h5><h2 id="1-3-对应IP搜集"><a href="#1-3-对应IP搜集" class="headerlink" title="1.3 对应IP搜集"></a>1.3 对应IP搜集</h2><pre><code>&gt; 查询相关域名对应IP、别名记录等，判断出网站服务器所使用的服务商或服务器IP信息。http://tool.chinaz.com/nslookup/</code></pre><h2 id="2-0-敏感目录"><a href="#2-0-敏感目录" class="headerlink" title="2.0 敏感目录"></a>2.0 敏感目录</h2><h4 id="收集方向："><a href="#收集方向：" class="headerlink" title="收集方向："></a>收集方向：</h4><h4 id="robots-txt、后台目录、安装包、上传目录、mysql管理页面、phpinfo、编辑器"><a href="#robots-txt、后台目录、安装包、上传目录、mysql管理页面、phpinfo、编辑器" class="headerlink" title="robots.txt、后台目录、安装包、上传目录、mysql管理页面、phpinfo、编辑器"></a>robots.txt、后台目录、安装包、上传目录、mysql管理页面、phpinfo、编辑器</h4><h5 id="常用工具：-字典爆破–御剑："><a href="#常用工具：-字典爆破–御剑：" class="headerlink" title="常用工具： 字典爆破–御剑："></a>常用工具： 字典爆破–御剑：</h5><h2 id="3-0、端口扫描"><a href="#3-0、端口扫描" class="headerlink" title="3.0、端口扫描"></a>3.0、端口扫描</h2><p>通过端口扫描可以判断出网站开启的服务，从而通过爆破枚举或者漏洞利用进行突破，进一步提升网站权限，端口扫描也是信息收集必备的操作。</p><p>扫描到的端口也许是网站的一个旁站，可以尝试对旁站进行漏洞探测，但是有些服务开启的端口可能被管理员修改，通过手工判断分析即可（例如开启了8888端口，通过尝试远程桌面连接确定该端口为3389修改过的端口）。</p><p>各服务开启的默认端口：</p><p>21 &gt;&gt; FTP</p><p>22 &gt;&gt; SSH</p><p>23 &gt;&gt; Telnet</p><p>110 &gt;&gt; POP3</p><p>1433 &gt;&gt; Sqlsever</p><p>3306 &gt;&gt; Mysql</p><p>… …</p><p>3389 &gt;&gt;Mstsc</p><p>8080 &gt;&gt;Tomcat/jboss</p><p>9090 &gt;&gt;WebSphere等</p><p>工具 ： ScanPort 御剑 </p><p>注：也可以使用Nmap进行端口扫描，如果网站存在WAF可以通过调节扫描线程或者利用FTP连接工具、SSH连接工具、Mysql连接等工具进行手工探测。</p><h2 id="4-0、旁站C段"><a href="#4-0、旁站C段" class="headerlink" title="4.0、旁站C段"></a>4.0、旁站C段</h2><p>旁站：同服务器其他站点</p><p>C段：同一网段其他服务器</p><p>对于防护比较强的主站，通常是很难挖掘到漏洞的，这时需要查看该站点的旁站，通过探测旁站的漏洞进行利用，从而拿下主站的权限。</p><p>当网站不存在旁站时，就需要进行C段探测（有些网站买断了相邻的几个IP做为分站，如果拿到分站的管理员敏感信息，如密码之类的，可以尝试对主站进行撞库），通过拿下C段中服务器进行ARP欺骗达到劫持域名的效果。</p><h4 id="通过ping等方式获取网站IP，然后进行查询，"><a href="#通过ping等方式获取网站IP，然后进行查询，" class="headerlink" title="通过ping等方式获取网站IP，然后进行查询，"></a>通过ping等方式获取网站IP，然后进行查询，</h4><p><a href="http://s.tool.chinaz.com/same" target="_blank" rel="noopener">http://s.tool.chinaz.com/same</a></p><p>C段–C段查询</p><p><a href="http://www.5kik.com/c/" target="_blank" rel="noopener">http://www.5kik.com/c/</a></p><h2 id="5-0、整站分析"><a href="#5-0、整站分析" class="headerlink" title="5.0、整站分析"></a>5.0、整站分析</h2><h2 id="5-1-服务器类型"><a href="#5-1-服务器类型" class="headerlink" title="5.1 服务器类型"></a>5.1 服务器类型</h2><p>检测服务器平台、版本等，获取后可以制定漏洞挖掘方案（如IIS6.0存在解析漏洞等）</p><p>根据网站后缀名检测网站类型 ping 域名 看服务器类型</p><p>云悉WEB资产梳理</p><p><a href="http://www.yunsee.cn/" target="_blank" rel="noopener">http://www.yunsee.cn/</a></p><p>根据IIS版本判断Windows系统，系统对应版本通过搜索引擎查找。</p><p>注：使用AppScan、WVS等扫描工具也可以判断。</p><h2 id="5-2-网站容器"><a href="#5-2-网站容器" class="headerlink" title="5.2 网站容器"></a>5.2 网站容器</h2><p>搭建网站的服务组件，例如：iis、Apache、nginx、tomcat等，通过网站容器判断存在的漏洞（如：Apache解析漏洞，nginx解析漏洞）。</p><h2 id="5-3-脚本类型"><a href="#5-3-脚本类型" class="headerlink" title="5.3 脚本类型"></a>5.3 脚本类型</h2><p>判断ASP、ASPX、PHP、JSP等</p><p>一、通过修改首页文件后缀查看页面响应判断。</p><p>二、通过搜索框查找相关文章辨别脚本类型。</p><p>在网站搜索框中输入任意字符，查询后，通过浏览器上的URL判断网站脚本类型。</p><p>三、通过爬虫工具爬取网站目录判断网站脚本类型。</p><h2 id="5-4-建站CMS类型"><a href="#5-4-建站CMS类型" class="headerlink" title="5.4 建站CMS类型"></a>5.4 建站CMS类型</h2><p>识别dedecms、phpcms、emlog、帝国cms等，通过网站使用的CMS找取该CMS已经公布的漏洞进行利用，进一步渗透网站。</p><p>云悉在线WEB指纹CMS识别平台</p><h2 id="5-5-数据库类型"><a href="#5-5-数据库类型" class="headerlink" title="5.5 数据库类型"></a>5.5 数据库类型</h2><p>access、sqlserver、mysql、oracle、postgresql等</p><p>通常情况：access–asp mysql–php oracle–jsp sqlserver–aspx</p><p>postgresql–php 数据库的类型判断对于SQL注入必关重要，只有通过知道数据库类型才能进一步对网站进行SQL注入。</p><p>也可以通过端口扫描器扫描出网站开放的端口，然后对应开启的数据库类型。</p><p>各端口对应数据库类型：</p><p>1433–sql server 3306–mysql oracle–1521 postgresql–5432</p><p>access–默认不开放连接端口，数据库存储在FTP服务器上。</p><p>端口扫描判断数据库类型的方法较为准确，但是管理员也可能选择不开放外网数据库端口，开放内网的数据库端口，也有些管理员喜欢使用站库分离的方法或者使用WAF进行拦截端口扫描来防护站点，这样我们通过端口扫描判断数据库类型的方法便有些失效了。</p><h2 id="5-6-WAF"><a href="#5-6-WAF" class="headerlink" title="5.6 WAF"></a>5.6 WAF</h2><p>判断安全狗、阿里云云盾、360网站卫士、护卫神等WEB应用程序防火墙，便于采取绕过WAF的办法。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
            <tag> web安全 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 创建博客</title>
      <link href="/2019/08/06/hexo-chuang-jian-bo-ke/"/>
      <url>/2019/08/06/hexo-chuang-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/08/06/hello-world/"/>
      <url>/2019/08/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文章测试</title>
      <link href="/2019/08/06/wen-zhang-ce-shi/"/>
      <url>/2019/08/06/wen-zhang-ce-shi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Google tutorial</title>
      <link href="/2019/04/14/google-tutorial/"/>
      <url>/2019/04/14/google-tutorial/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云服务器搭建宝塔面板</title>
      <link href="/2019/03/21/yun-fu-wu-qi-da-jian-bao-ta-mian-ban/"/>
      <url>/2019/03/21/yun-fu-wu-qi-da-jian-bao-ta-mian-ban/</url>
      
        <content type="html"><![CDATA[<h1 id="云服务器搭建宝塔"><a href="#云服务器搭建宝塔" class="headerlink" title="云服务器搭建宝塔"></a>云服务器搭建宝塔</h1><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><p>一台云服务器 (阿里 腾讯 百度 都行)</p><p>ssh 远程连接工具 或者直接管理服务器也行</p><h2 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h2><blockquote><p>安装要求：<br>内存：512M以上，推荐768M以上（纯面板约占系统60M内存）<br>硬盘：100M以上可用硬盘空间（纯面板约占20M磁盘空间）<br>系统：CentOS 7.1+ (Ubuntu16.04+.、Debian9.0+)，确保是干净的操作系统，没有安装过其它环境带的Apache/Nginx/php/MySQL（已有环境不可安装）</p></blockquote><p>centos 下</p><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> -y <span class="token function">wget</span> <span class="token operator">&amp;&amp;</span> <span class="token function">wget</span> -O install.sh \http://download.bt.cn/install/install_6.0.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> install.sh</code></pre><p>Ubuntu/Deepin安装命令：</p><pre><code>wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh\&amp;&amp; sudo bash install.sh</code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 宝塔面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10搭建Linux环境(linux子系统)</title>
      <link href="/2019/03/21/win10-da-jian-linux-huan-jing-linux-zi-xi-tong/"/>
      <url>/2019/03/21/win10-da-jian-linux-huan-jing-linux-zi-xi-tong/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a><center><font size="20px" color="red">Linux</font></center></h1><hr><h5 id="以下文档都是我亲自测试过的除了xampp那块"><a href="#以下文档都是我亲自测试过的除了xampp那块" class="headerlink" title="以下文档都是我亲自测试过的除了xampp那块"></a><font color="blue">以下文档都是我亲自测试过的除了xampp那块</font></h5><h2 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a><font color="green">设置root密码</font></h2><pre><code>sudo passwd     orsudo passwd root</code></pre><h2 id="切换root身份"><a href="#切换root身份" class="headerlink" title="切换root身份"></a><font color="green">切换root身份</font></h2><pre><code>su -    or su root</code></pre><h2 id="配置-ssh"><a href="#配置-ssh" class="headerlink" title="配置 ssh"></a><font color="green">配置 ssh</font></h2><h5 id="以root身份输入"><a href="#以root身份输入" class="headerlink" title="以root身份输入"></a>以root身份输入</h5><pre><code>service ssh start#如果出现如下情况#Starting OpenBSD Secure Shell server sshd #Could not load host key: /etc/ssh/ssh_host_rsa_key#Could not load host key: /etc/ssh/ssh_host_ecdsa_key#Could not load host key: /etc/ssh/ssh_host_ed25519_key#那么就需要重新 生成keydpkg-reconfigure openssh-server#之后再运行service ssh start#检测ssh状态service ssh status#如果连接出现(server sent publickey)#该问题是由于ssh链接未允许远程密码认证导致的#通过管理控制台进入系统，cat 查看 /etc/ssh/sshd_config配置文件中是否包含以下配置 PasswordAuthentication no #通过vim编辑器将该参数改成yes，如下 PasswordAuthentication yes #清除keyssh-keygen -R ip#登录时，如果root用户不能登录#通过管理控制台进入系统，cat 查看 /etc/ssh/sshd_config配置文件中是否包含以下配置 PermitRootLogin no #通过vim编辑器将该参数改成yes，如下 PermitRootLogin yes 保存，然后重启ssh服务 service sshd restart#不要忘了，还要配置防火墙开启端口才能被其他PC访问#打开 Win10 防火墙设置#(可以通过右下角有个向上的箭头点击盾牌快速进入面板)#Windows Defender 安全中心,点击下方的高级设置#选择左侧入站规则 然后点击右侧 新建规则 #选择 端口 -&gt; tcp -&gt; 特定端口 -&gt; 填入刚刚设置的 Port 默认 22 -&gt; 允许连接 -&gt; 提交#连接的网络根据你本地的网络连接情况选择，搞不清楚就公用、专用全选好了，端口添加后即可正常访问了，现在可以通过XShell 或其他终端连接试试了</code></pre><p>如果使用Android手机，推荐看看这篇文章安装APP 即可操作<br><a href="https://blog.csdn.net/zhouzme/article/details/81084661" target="_blank" rel="noopener">https://blog.csdn.net/zhouzme/article/details/81084661</a></p><h2 id="配置-FTP"><a href="#配置-FTP" class="headerlink" title="配置 FTP"></a><font color="green">配置 FTP</font></h2><p>首先安装ftp</p><pre><code>#更新本地源# 编辑源sudo vim /etc/apt/sources.list# 修改为deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse # 更新sudo apt-get updatesudo apt-get dist-upgrade#安装ftpsudo apt-get -y install vsftpd</code></pre><p>如果说出现</p><pre><code>Reading package lists... DoneBuilding dependency treeReading state information... Donevsftpd is already the newest version (3.0.3-9build1).The following package was automatically installed and is no longer required:  libfreetype6Use &#39;sudo apt autoremove&#39; to remove it.0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.</code></pre><p>说明你电脑已经安装过了或者已经是最新版</p><pre><code>#启动ftpsudo service vsftpd start#修改配置文件 sudo vim /etc/vsftpd.conf    #开启监听    listen YES    #是否允许用户匿名登录    anonymous_enable=YES    #允许本地用户登录    local_enable=YES    #设置匿名用户登录的目录    anon_root=/home/moshang/anonFtp/    #实名用户拥有写入权限    write_enable=YES    #设置本地掩码为022    local_umask=022    #允许匿名用户上传数据    anon_upload_enable=YES    #匿名用户可以创建目录    anon_mkdir_write_enable=YES#重启服务器sudo service vsftpd restart   </code></pre><p>最好使用匿名用户登录，不要轻易暴露你的密码</p><pre><code>#命令行下ftp serverip#匿名用户 (只限操作自己的目录)user:anonymouspasswd:直接回车#实名用户(可以操作/目录和其他目录)user:自己的用户名passwd:自己的密码#上传文件put file#下载文件get file</code></pre><p><del>#创建FTP用户组ftp-users<br>groupadd ftp-users</del></p><p><del>#创建用户组目录ftp-docs<br>mkdir /home/ftp-docs</del></p><p><del>#修改权限<br>chmod -R 750 /home/ftp-docs</del></p><p><del>#750组只能读不能写，要组能写，请改成770或760</del></p><p><del>指定文件夹归属用户和用户组<br>chown root:ftp-users /home/ftp-docs</del></p><p><del>#添加FTP用户并为他们设置缺省目录<br>useradd -g ftp-users -d /home/ftp-docs</del> </p><p><del>#设置密码passwd user1</del></p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a><font color="green" size="10px">配置环境</font></h2><h3 id="Lampp"><a href="#Lampp" class="headerlink" title="Lampp"></a><font color="green" size="8px">Lampp</font></h3><p>站点域名的话就不要想了，没法用，建立两个项目除非分配端口</p><blockquote><p><font size="6px">安装apache</font></p><pre><code>sudo apt-get -y install apache2</code></pre><p>启动apache2</p><pre><code>sudo service apache2 start</code></pre><p>命令行访问</p><pre><code>curl server ip //curl 192.168.1.109</code></pre></blockquote><p>#如果有返回html标签的数据，说明可以访问了</p><pre><code>&gt;&lt;font size=&quot;6px&quot;&gt;安装mysql</code></pre><p>sudo apt install mysql-server-5.7</p><p>#回车后会让你设置mysql密码</p><pre><code>&gt;启动mysql</code></pre><p>service mysql start<br>如果出现<br>No directory, logging in with HOME=/</p><p>#运行<br>sudo service mysql stop</p><p>sudo usermod -d /var/lib/mysql/ mysql<br>service mysql start</p><pre><code>&gt;登录mysql</code></pre><p>mysql -uroot -p</p><p>#输入设置的密码登录</p><pre><code>&gt;如果说用navicat或者小海豚连接时连不上</code></pre><p>#原因是mysql没有开启所有人可访问权限</p><p>#解决方法<br>mysql -uroot –p<br>mysql&gt;use mysql;<br>mysql&gt;update user set host = ‘%’ where user = ‘root’;<br>mysql&gt;select host, user from user;<br>mysql&gt;FLUSH PRIVILEGES;<br>修改MySQL的配置文件/etc/mysql/mysql.conf.d/my.cnf，因为默认3306端口只允许本地访问的，注释掉这行</p><pre><code>&gt;mysql无法启动</code></pre><p>ps -ef | grep mysql //查看正在运行的服务<br>kill -9 [pid]       //停止运行的服务 </p><pre><code>&gt;彻底删除mysql(对mysql配置文件的改动超出自己的能力范围时)</code></pre><p>#首先在终端中查看MySQL的依赖项:<br>dpkg –list|grep mysql</p><pre><code></code></pre><p>#卸载:<br>sudo apt-get remove mysql-common</p><pre><code></code></pre><p>#卸载:<br>sudo apt-get autoremove –purge mysql-server-5.7</p><pre><code></code></pre><p>#清除残留数据:<br>dpkg -l|grep ^rc|awk ‘{print$2}’|sudo xargs dpkg -P</p><pre><code></code></pre><p>#再次查看MySQL的剩余依赖项:<br>dpkg –list|grep mysql</p><pre><code></code></pre><p>继续删除剩余依赖项，如：sudo apt-get autoremove –purge –name–</p><pre><code></code></pre><p>#至此已经没有了MySQL的依赖项，彻底删除，Good Luck</p><pre><code>&gt;&lt;font size=&quot;6px&quot;&gt;安装php</code></pre><p>检测一下本地是否存在php环境<br>php -v </p><p>#出现php版本号的话，卸载</p><pre><code>&gt;一、删除php的相关包及配置</code></pre><p>sudo apt-get autoremove php7*</p><pre><code>&gt;二、删除关联</code></pre><p>sudo find /etc -name “<em>php</em>“ |xargs  rm -rf </p><pre><code>&gt;三、清除dept列表</code></pre><p>sudo apt purge <code>dpkg -l | grep php| awk &#39;{print $2}&#39; |tr &quot;\n&quot; &quot; &quot;</code></p><pre><code>&gt;四、检查是否卸载干净（无返回就是卸载完成）</code></pre><p>dpkg -l | grep php7.0</p><pre><code>&gt;开始安装php</code></pre><p>sudo apt install php-fpm php-mysql</p><pre><code>&gt;查看php版本</code></pre><p>php -v</p><pre><code>&gt;安装所需依赖</code></pre><p>sudo apt-get install libapache2-mod-php<br>sudo a2enmod<br>php + 安装的版本号</p><pre><code>```shellcd /var/www/htmltouch phpinfo.phpvim phpinfo.php键盘i输入&lt;?php phpinfo();?&gt;键盘escshift + 英文:wq保存退出浏览器输入 服务器ip/phpinfo.php访问PHP installation complete</code></pre><h3 id="Xampp"><a href="#Xampp" class="headerlink" title="Xampp"></a><font color="green" size="8px">Xampp</font></h3><blockquote><p><font size="6px">配置xampp</font></p><pre><code></code></pre></blockquote><p>#下载文件<br>wget <a href="https://www.apachefriends.org/xampp-files/7.3.0/xampp-linux-x64-7.3.0-0-installer.run" target="_blank" rel="noopener">https://www.apachefriends.org/xampp-files/7.3.0/xampp-linux-x64-7.3.0-0-installer.run</a></p><p>chmod 770 ./xampp-linux-x64-7.3.0-0-installer.run //修改权限加入执行权限</p><p>./xampp-linux-x64-7.3.0-0-installer.run //运行<br>Xampp installation complete</p><pre><code>&gt;&lt;font size =&quot;4px&quot;&gt;各配置文件目录：&gt;Apache文档根目录：/opt/lampp/htdocs/&gt;Apache配置文件：/opt/lampp/etc/httpd.conf&gt;MySQL配置文件：/opt/lampp/etc/my.cnf&gt;PHP配置文件：/opt/lampp/etc/php.ini&gt;ProFTPD配置文件：/opt/lampp/etc/proftpd.conf&gt;PHPMyadmin配置文件：/opt/lampp/phpmyadmin/config.inc.php&gt;&lt;font size =&quot;4px&quot;&gt;常用XAMPP命令（在终端以root输入）：&gt;启动/停止/重启Apache：</code></pre><p>/opt/lampp/lampp start/stop/restart(包括启动/停止/重启了mysql,proftpd)</p><pre><code>&gt;安全设置：/opt/lampp/lampp security&gt;使用php版本/查看版本：</code></pre><p>/opt/lampp/lampp php4(5)/phpstatus</p><pre><code>&gt;只启动和停止Apache：</code></pre><p>/opt/lampp/lampp startapache/stopapache</p><pre><code>&gt;只启动和停止MySQL：</code></pre><p>/opt/lampp/lampp startmysql/stopmysql</p><pre><code>&gt;只启动和停止ProFTPD服务器：</code></pre><p>/opt/lampp/lampp startftp/stopftp</p><pre><code>&gt;启动和停止Apache的SSL支持：</code></pre><p>/opt/lampp/lampp startssl/stopssl</p><pre><code>&gt;随系统自启动：</code></pre><p>ln –s /opt/lampp/lampp/etc/rc.d/rc3.d/S99lampp</p><p>ln –s /opt/lampp/lampp/etc/rc.d/rc4.d/S99lampp</p><p>ln –s /opt/lampp/lampp/etc/rc.d/rc5.d/S99lampp</p><pre><code>&gt;取消自启动：</code></pre><p>ln –s /opt/lampp/lampp K01lampp</p><pre><code>&gt;卸载XAMPP：</code></pre><p>rm –rf /opt/lampp</p><pre><code>--------------------- ~~&lt;font color=&quot;green&quot;&gt;配置docker&lt;/font&gt;~~</code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> win10 </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo + github搭建个人博客</title>
      <link href="/2019/03/21/hexo-github-da-jian-ge-ren-bo-ke/"/>
      <url>/2019/03/21/hexo-github-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="github-hexo搭建博客"><a href="#github-hexo搭建博客" class="headerlink" title="github + hexo搭建博客"></a>github + hexo搭建博客</h1><h2 id="环境及工具"><a href="#环境及工具" class="headerlink" title="环境及工具"></a>环境及工具</h2><pre><code>git  nodejs hexo </code></pre><h3 id="1-1-安装git"><a href="#1-1-安装git" class="headerlink" title="1.1 安装git"></a>1.1 安装git</h3><pre><code>[git下载](https://www.git-scm.com/download/)</code></pre><h3 id="1-2-安装nodejs"><a href="#1-2-安装nodejs" class="headerlink" title="1.2 安装nodejs"></a>1.2 安装nodejs</h3><pre><code>[nodejs](http://nodejs.cn/download/)wget https://nodejs.org/dist/v9.3.0/node-v9.3.0-linux-x64.tar.xzxz -d node-v9.3.0-linux-x64.tar.xz</code></pre><p>tar -xf node-v9.3.0-linux-x64.tar</p><p>ln -s ~/node-v9.3.0-linux-x64/bin/node /usr/bin/node<br>ln -s ~/node-v9.3.0-linux-x64/bin/npm /usr/bin/npm</p><p>测试</p><p>node -v<br>npm -v</p><h3 id="1-3安装hexo-使用下面的命令来下载和安装-Hexo"><a href="#1-3安装hexo-使用下面的命令来下载和安装-Hexo" class="headerlink" title="1.3安装hexo 使用下面的命令来下载和安装 Hexo"></a>1.3安装hexo 使用下面的命令来下载和安装 Hexo</h3><pre><code>npm install hexo-cli -g//或者npm install hexo -g --no-optional</code></pre><blockquote><p>这里 -g 代表全局安装，这样 hexo 包将放在 /usr/local/lib/node_modules (Windows 位于 ~/AppData/Roaming/npm/node_modules)，不带的话是本地安装，将放在当前目录的 node_modules 下</p></blockquote><h3 id="1-4-注册github账号"><a href="#1-4-注册github账号" class="headerlink" title="1.4 注册github账号"></a>1.4 注册github账号</h3><p>   <a href="https://github.com/signup" target="_blank" rel="noopener">https://github.com/signup</a></p><h3 id="1-5-创建github仓库"><a href="#1-5-创建github仓库" class="headerlink" title="1.5 创建github仓库"></a>1.5 创建github仓库</h3><blockquote><p>   以自己的用户名 + github.io 来命名 </p></blockquote><h2 id="二、在本地创建博客"><a href="#二、在本地创建博客" class="headerlink" title="二、在本地创建博客"></a>二、在本地创建博客</h2><blockquote><p>(在之后hexo的命令我都用的简写)</p></blockquote><h3 id="1-初始化博客环境"><a href="#1-初始化博客环境" class="headerlink" title="1. 初始化博客环境"></a>1. 初始化博客环境</h3><p>首先建立一个文件夹 作为博客的根目录 然后进入该目录在命令行中执行</p><pre><code>// 初始化hexo环境hexo init// 使用npm安装所需的组件npm install</code></pre><h3 id="2-发表一篇新文章"><a href="#2-发表一篇新文章" class="headerlink" title="2. 发表一篇新文章"></a>2. 发表一篇新文章</h3><blockquote><p>我们可以使用下面命令来创建一篇新的文章，或者直接将文章放到 &lt;博客根目录&gt;/source/_posts 目录里</p></blockquote><pre><code>hexo new  &quot;文章标题&quot;</code></pre><h3 id="3-生成博客静态网页"><a href="#3-生成博客静态网页" class="headerlink" title="3. 生成博客静态网页"></a>3. 生成博客静态网页</h3><blockquote><p>使用下面命令将 source 文件生成静态网页，生成的文件放在<blog_root>/public 目录下</blog_root></p></blockquote><pre><code>hexo  g</code></pre><h3 id="4-将网页发布到server端"><a href="#4-将网页发布到server端" class="headerlink" title="4. 将网页发布到server端"></a>4. 将网页发布到server端</h3><pre><code>hexo s</code></pre><blockquote><p>最后我们就可以通过浏览器访问服务器网页。这里我们没配置server信息，所以server其实是本机（<a href="http://localhost:4000）" target="_blank" rel="noopener">http://localhost:4000）</a></p></blockquote><h2 id="三、部署到码云"><a href="#三、部署到码云" class="headerlink" title="三、部署到码云"></a>三、部署到码云</h2><blockquote><p>首先在全局配置文件 _config.yml 里的 deploy 部分进行配置，其中 repo为你的github pages对应的仓库地址（yourname.github.io )：</p></blockquote><p>需要安装一个git插件</p><pre><code>deploy:  type: git  repo: https://.........git  branch: master</code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos搭建PHP环境</title>
      <link href="/2019/03/18/centos-da-jian-php-huan-jing/"/>
      <url>/2019/03/18/centos-da-jian-php-huan-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="centos上搭建php开发环境"><a href="#centos上搭建php开发环境" class="headerlink" title="centos上搭建php开发环境"></a>centos上搭建php开发环境</h1><h2 id="安装apache"><a href="#安装apache" class="headerlink" title="安装apache"></a>安装apache</h2><pre class=" language-bash"><code class="language-bash">yum -y <span class="token function">install</span> httpd</code></pre><h2 id="开启apache服务"><a href="#开启apache服务" class="headerlink" title="开启apache服务"></a>开启apache服务</h2><pre class=" language-bash"><code class="language-bash">systemctl start httpd.service</code></pre><h2 id="设置apache开机启动"><a href="#设置apache开机启动" class="headerlink" title="设置apache开机启动"></a>设置apache开机启动</h2><pre class=" language-bash"><code class="language-bash">systemctl <span class="token function">enable</span> httpd.service</code></pre><h2 id="安装php"><a href="#安装php" class="headerlink" title="安装php"></a>安装php</h2><pre class=" language-bash"><code class="language-bash">yum -y <span class="token function">install</span> php</code></pre><h2 id="重启apache服务"><a href="#重启apache服务" class="headerlink" title="重启apache服务"></a>重启apache服务</h2><pre class=" language-bash"><code class="language-bash">systemctl restart httpd 或者 systemctl restart httpd.service</code></pre><p>然后，你可以写一个php文件在浏览器中运行一下了;</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /var/www/html/info.php</code></pre><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span> <span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter">?></span></code></pre><p>然后，在自己电脑浏览器输入 192.168.1.1/info.php<br>运行，会出现php的一些信息</p><h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><pre class=" language-bash"><code class="language-bash">yum -y <span class="token function">install</span> mariadb-service mariadb</code></pre><h2 id="开启mysql服务"><a href="#开启mysql服务" class="headerlink" title="开启mysql服务"></a>开启mysql服务</h2><pre class=" language-bash"><code class="language-bash">systemctl start mariadb.service</code></pre><h2 id="设置开机启动MySQL服务"><a href="#设置开机启动MySQL服务" class="headerlink" title="设置开机启动MySQL服务"></a>设置开机启动MySQL服务</h2><pre class=" language-bash"><code class="language-bash">systemctl <span class="token function">enable</span> mariadb.service</code></pre><h2 id="设置root帐户的密码"><a href="#设置root帐户的密码" class="headerlink" title="设置root帐户的密码"></a>设置root帐户的密码</h2><pre class=" language-bash"><code class="language-bash">mysql_secure_installation</code></pre><blockquote><p>然后会出现一串东西，可以仔细读一下，如果你懒得读，就在提示出来的时候，按Enter就好了，让你设置密码的时候，你就输入你想要的密码就行，然后继续在让你选择y/n是，Enter就好了；当一切结束的时候，你可以输入</p></blockquote><pre class=" language-bash"><code class="language-bash">mysql -uroot -p</code></pre><p>验证一下</p><h2 id="将PHP和MySQL关联起来"><a href="#将PHP和MySQL关联起来" class="headerlink" title="将PHP和MySQL关联起来"></a>将PHP和MySQL关联起来</h2><pre class=" language-bash"><code class="language-bash">yum search php</code></pre><p>yum -y install php-mysql</p><h2 id="安装常用的PHP模块"><a href="#安装常用的PHP模块" class="headerlink" title="安装常用的PHP模块"></a>安装常用的PHP模块</h2><pre class=" language-bash"><code class="language-bash">yum -y <span class="token function">install</span> php-gd php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-snmp php-soap curl curl-devel</code></pre><h2 id="重启apache服务-1"><a href="#重启apache服务-1" class="headerlink" title="重启apache服务"></a>重启apache服务</h2><pre class=" language-bash"><code class="language-bash">systemctl restart httpd.service</code></pre><blockquote><p>然后，再次在浏览器中运行info.php，你会看到安装的模块的信息；<br>至此，LAMP环境就搭建好了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
