<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>markdown语法</title>
      <link href="/2019/08/09/markdown-yu-fa/"/>
      <url>/2019/08/09/markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="MarkDown-语法"><a href="#MarkDown-语法" class="headerlink" title="MarkDown 语法"></a>MarkDown 语法</h2><h3 id="Markdown-标题"><a href="#Markdown-标题" class="headerlink" title="Markdown 标题"></a>Markdown 标题</h3><h4 id="1、使用-和-标记一级和二级标题"><a href="#1、使用-和-标记一级和二级标题" class="headerlink" title="1、使用 = 和 - 标记一级和二级标题"></a>1、使用 = 和 - 标记一级和二级标题</h4><pre><code>我展示的是一级标题=================我展示的是二级标题-----------------</code></pre><p>显示效果</p><hr><h1 id="我展示的是一级标题"><a href="#我展示的是一级标题" class="headerlink" title="我展示的是一级标题"></a>我展示的是一级标题</h1><h2 id="我展示的是二级标题"><a href="#我展示的是二级标题" class="headerlink" title="我展示的是二级标题"></a>我展示的是二级标题</h2><hr><h3 id="使用-号标记"><a href="#使用-号标记" class="headerlink" title="使用 # 号标记"></a>使用 # 号标记</h3><blockquote><p>使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推</p></blockquote><pre><code># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><p>显示效果</p><hr><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><h3 id="Markdown-段落"><a href="#Markdown-段落" class="headerlink" title="Markdown 段落"></a>Markdown 段落</h3><blockquote><p>Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。</p></blockquote><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><blockquote><p>Markdown 可以使用以下几种字体：</p></blockquote><pre><code>*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___</code></pre><p>显示效果如下所示：</p><hr><p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong><br><strong><em>粗斜体文本</em></strong></p><hr><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><pre><code>**** * ******- - -----------</code></pre><h2 id="显示效果"><a href="#显示效果" class="headerlink" title="显示效果"></a>显示效果</h2><hr><hr><hr><hr><hr><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><blockquote><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：</p></blockquote><pre><code>RUNOOB.COMGOOGLE.COM~~BAIDU.COM~~</code></pre><p>显示效果如下所示：</p><hr><p>RUNOOB.COM<br>GOOGLE.COM<br><del>BAIDU.COM</del></p><h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><blockquote><p>下划线可以通过 HTML 的 <code>&lt;u&gt;</code> 标签来实现：</p></blockquote><p><u>带下划线文本</u></p><h3 id="Markdown-列表"><a href="#Markdown-列表" class="headerlink" title="Markdown 列表"></a>Markdown 列表</h3><blockquote><p>Markdown 支持有序列表和无序列表。<br>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记：</p></blockquote><pre><code>* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项</code></pre><p>显示结果如下：</p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><hr><blockquote><p>有序列表使用数字并加上 . 号来表示，如：</p><pre><code>1. 第一项2. 第二项3. 第三项</code></pre><p>显示结果如下：</p></blockquote><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><pre><code>1. 第一项：    - 第一项嵌套的第一个元素    - 第一项嵌套的第二个元素2. 第二项：    - 第二项嵌套的第一个元素    - 第二项嵌套的第一个元素</code></pre><p>显示结果如下：</p><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第一个元素</li></ul></li></ol><h3 id="Markdown-区块"><a href="#Markdown-区块" class="headerlink" title="Markdown 区块"></a>Markdown 区块</h3><blockquote><p>Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号：</p></blockquote><pre><code>&gt; 区块引用&gt; 菜鸟教程&gt; 学的不仅是技术更是梦想</code></pre><p>显示结果如下：</p><blockquote><p>区块引用<br>菜鸟教程<br>学的不仅是技术更是梦想</p></blockquote><blockquote><p>另外区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推退：</p><pre><code>最外层&gt; 第一层嵌套&gt; &gt; 第二层嵌套</code></pre><p>显示结果如下：<br>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote><h4 id="区块中使用列表"><a href="#区块中使用列表" class="headerlink" title="区块中使用列表"></a>区块中使用列表</h4><pre><code>&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项</code></pre><p>显示结果如下：</p><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><p>列表中使用区块</p><p>如果要在列表项目内放进区块，那么就需要在 &gt; 前添加四个空格的缩进。</p><p>区块中使用列表实例如下：</p><pre><code>* 第一项    &gt; 菜鸟教程    &gt; 学的不仅是技术更是梦想* 第二项</code></pre><p>显示结果如下：</p><ul><li>第一项<blockquote><p>菜鸟教程<br>学的不仅是技术更是梦想</p></blockquote></li><li>第二项</li></ul><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><blockquote><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如：</p></blockquote><blockquote><p><code>printf()</code> 函数</p></blockquote><p>显示结果如下：<br><code>printf()</code> 函数</p><p>代码区块<br>代码区块使用 4 个空格或者一个制表符（Tab 键）。</p><p>你也可以用 ``` 包裹一段代码，并指定一种语言（也可以不指定）：</p><blockquote><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'RUNOOB'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>显示结果如下</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'RUNOOB'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></blockquote><h3 id="Markdown-链接"><a href="#Markdown-链接" class="headerlink" title="Markdown 链接"></a>Markdown 链接</h3><pre><code>[链接名称](链接地址)或者&lt;链接地址&gt;</code></pre><p>例如：</p><blockquote><p>这是一个链接 <a href="https://www.runoob.com" target="_blank" rel="noopener">菜鸟教程</a></p></blockquote><p>直接使用链接地址：</p><p><a href="https://www.runoob.com" target="_blank" rel="noopener">https://www.runoob.com</a></p><h3 id="Markdown-图片"><a href="#Markdown-图片" class="headerlink" title="Markdown 图片"></a>Markdown 图片</h3><blockquote><p>Markdown 图片语法格式如下：</p></blockquote><pre><code>![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;)</code></pre><ul><li>开头一个感叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字.</li></ul><p>使用实例：</p><pre><code>![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png)![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png &quot;RUNOOB&quot;)</code></pre><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标"></p><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标" title="RUNOOB"></p><hr><h3 id="Markdown-表格"><a href="#Markdown-表格" class="headerlink" title="Markdown 表格"></a>Markdown 表格</h3><blockquote><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p></blockquote><pre><code>|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |</code></pre><p>我们可以设置表格的对齐方式：</p><ul><li>-: 设置内容和标题栏居右对齐。</li><li>:- 设置内容和标题栏居左对齐。</li><li>:-: 设置内容和标题栏居中对齐。</li></ul><pre><code>| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |</code></pre><p>以上代码显示结果如下：</p><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h3 id="Markdown-高级技巧"><a href="#Markdown-高级技巧" class="headerlink" title="Markdown 高级技巧"></a>Markdown 高级技巧</h3><h4 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h4><blockquote><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim 用法</title>
      <link href="/2019/08/09/vim-yong-fa/"/>
      <url>/2019/08/09/vim-yong-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="命令行下的神级编辑器-Vim"><a href="#命令行下的神级编辑器-Vim" class="headerlink" title="命令行下的神级编辑器 Vim"></a>命令行下的神级编辑器 Vim</h1><h2 id="模式介绍"><a href="#模式介绍" class="headerlink" title="模式介绍"></a>模式介绍</h2><ol><li>普通模式(Normal mode)</li></ol><blockquote><p>在普通模式中，用的编辑器命令，比如移动光标，删除文本等等。这也是Vim启动后的默认模式。这正好和许多新用户期待的操作方式相反（大多数编辑器默认模式为插入模式）。<br>在普通模式中，有很多方法可以进入插入模式。比较普通的方式是按<code>a</code>（append／追加）键或者<code>i</code>（insert／插入）键。</p></blockquote><ol start="2"><li>插入模式(Insert mode)</li></ol><blockquote><p>在这个模式中，大多数按键都会向文本缓冲中插入文本。大多数新用户希望文本编辑器编辑过程中一直保持这个模式。<br>在插入模式中，可以按ESC键回到普通模式。</p></blockquote><ol start="3"><li>可视模式(Visual mode)</li></ol><blockquote><p>这个模式与普通模式比较相似。但是移动命令会扩大高亮的文本区域。高亮区域可以是字符、行或者是一块文本。当执行一个非移动命令时，命令会被执行到这块高亮的区域上。Vim的”文本对象”也能和移动命令一样用在这个模式中。</p></blockquote><ol start="4"><li>选择模式(Select mode)</li></ol><blockquote><p>这个模式和无模式编辑器的行为比较相似（Windows标准文本控件的方式）。这个模式中，可以用鼠标或者光标键高亮选择文本，不过输入任何字符的话，Vim会用这个字符替换选择的高亮文本块，并且自动进入插入模式。</p></blockquote><ol start="5"><li>命令行模式(Command line mode)</li></ol><blockquote><p>在命令行模式中可以输入会被解释成并执行的文本。例如执行命令（<code>:</code>键），搜索（<code>/</code>和<code>?</code>键）或者过滤命令（<code>!</code>键）。在命令执行之后，Vim返回到命令行模式之前的模式，通常是普通模式。</p></blockquote><ol start="6"><li>Ex模式(Ex mode)</li></ol><blockquote><p>这和命令行模式比较相似，在使用<code>:visual</code>命令离开Ex模式前，可以一次执行多条命令。</p></blockquote><h2 id="模式切换"><a href="#模式切换" class="headerlink" title="模式切换"></a>模式切换</h2><blockquote><p>vim启动进入普通模式，处于插入模式或命令行模式时只需要按<code>Esc</code>即可进入普通模式。普通模式中按<code>i</code>（插入）或<code>a</code>（附加）键都可以进入插入模式，普通模式中按<code>:</code>进入命令行模式。命令行模式中输入<code>wq</code>回车后保存并退出vim。</p></blockquote><h2 id="进入vim"><a href="#进入vim" class="headerlink" title="进入vim"></a>进入vim</h2><blockquote><p>使用vim命令进入vim界面</p></blockquote><p>打开terminal，输入以下命令</p><pre><code>$ vim practice_1.txt</code></pre><p>直接使用vim也可以打开vim编辑器，但是不会打开任何文件。</p><pre><code>$ vim</code></pre><p>在进入vim后，按下<code>i</code>键进入插入模式。在该模式下您可以输入文本信息,下面请输入如下三行信息：</p><pre><code>12345678abcdefghijkdwareminkrainhee</code></pre><p>按<code>Esc</code>进入普通模式，在该模式下使用方向键或者<code>h</code>,<code>j</code>,<code>k</code>,<code>l</code>键可以移动游标。</p><table><thead><tr><th>按键</th><th align="center">说明</th></tr></thead><tbody><tr><td><code>h</code></td><td align="center">左</td></tr><tr><td><code>j</code></td><td align="center">下</td></tr><tr><td><code>k</code></td><td align="center">上</td></tr><tr><td><code>l</code></td><td align="center">右 (小写l)</td></tr><tr><td><code>w</code></td><td align="center">移动到下一个单词</td></tr><tr><td><code>b</code></td><td align="center">移动到上一个单词</td></tr></tbody></table><h2 id="进入插入模式"><a href="#进入插入模式" class="headerlink" title="进入插入模式"></a>进入插入模式</h2><blockquote><p>在普通模式下使用下面的键将进入插入模式，并可以从相应的位置开始输入</p></blockquote><table><thead><tr><th>命令</th><th align="center">说明</th></tr></thead><tbody><tr><td><code>i</code></td><td align="center">在当前光标处进行编辑</td></tr><tr><td><code>I</code></td><td align="center">在行首插入</td></tr><tr><td><code>A</code></td><td align="center">在行末插入</td></tr><tr><td><code>a</code></td><td align="center">在光标后插入编辑</td></tr><tr><td><code>o</code></td><td align="center">在当前行后插入一个新行</td></tr><tr><td><code>O</code></td><td align="center">在当前行前插入一个新行</td></tr><tr><td><code>cw</code></td><td align="center">替换从光标所在位置后到一个单词结尾的字符</td></tr></tbody></table><h2 id="保存文档"><a href="#保存文档" class="headerlink" title="保存文档"></a>保存文档</h2><h3 id="命令行模式下保存文档"><a href="#命令行模式下保存文档" class="headerlink" title="命令行模式下保存文档"></a>命令行模式下保存文档</h3><blockquote><p>从普通模式输入<code>:</code>进入命令行模式，输入<code>w</code>回车，保存文档。输入<code>:w 文件名</code>可以将文档另存为其他文件名或存到其它路径下</p></blockquote><h2 id="退出vim"><a href="#退出vim" class="headerlink" title="退出vim"></a>退出vim</h2><h3 id="命令行模式下退出vim"><a href="#命令行模式下退出vim" class="headerlink" title="命令行模式下退出vim"></a>命令行模式下退出vim</h3><blockquote><p>从普通模式输入<code>:</code>进入命令行模式，输入<code>wq</code>回车，保存并退出编辑</p></blockquote><p>以下为其它几种退出方式：</p><table><thead><tr><th>命令</th><th align="center">说明</th></tr></thead><tbody><tr><td><code>:q!</code></td><td align="center">强制退出，不保存</td></tr><tr><td><code>:q</code></td><td align="center">退出</td></tr><tr><td><code>:wq!</code></td><td align="center">强制保存并退出</td></tr><tr><td><code>:w &lt;文件路径&gt;</code></td><td align="center">另存为</td></tr><tr><td><code>:saveas 文件路径</code></td><td align="center">另存为</td></tr><tr><td><code>:x</code></td><td align="center">保存并退出</td></tr><tr><td><code>:wq</code></td><td align="center">保存并退出</td></tr></tbody></table><h3 id="普通模式下退出vim"><a href="#普通模式下退出vim" class="headerlink" title="普通模式下退出vim"></a>普通模式下退出vim</h3><blockquote><p>普通模式下输入<code>Shift+zz</code>即可保存退出vim</p></blockquote><h2 id="删除文本"><a href="#删除文本" class="headerlink" title="删除文本"></a>删除文本</h2><h3 id="普通模式下删除vim文本信息"><a href="#普通模式下删除vim文本信息" class="headerlink" title="普通模式下删除vim文本信息"></a>普通模式下删除vim文本信息</h3><blockquote><p>进入普通模式，使用下列命令可以进行文本快速删除：</p></blockquote><table><thead><tr><th>命令</th><th align="center">说明</th></tr></thead><tbody><tr><td><code>x</code></td><td align="center">删除游标所在的字符</td></tr><tr><td><code>X</code></td><td align="center">删除游标所在前一个字符</td></tr><tr><td><code>Delete</code></td><td align="center">同<code>x</code></td></tr><tr><td><code>dd</code></td><td align="center">删除整行</td></tr><tr><td><code>dw</code></td><td align="center">删除一个单词(不适用中文)</td></tr><tr><td><code>d$</code>或<code>D</code></td><td align="center">删除至行尾</td></tr><tr><td><code>d^</code></td><td align="center">删除至行首</td></tr><tr><td><code>dG</code></td><td align="center">删除到文档结尾处</td></tr><tr><td><code>d1G</code></td><td align="center">删至文档首部</td></tr><tr><td><code>dnj</code>(n代表数字)</td><td align="center">删除光标所在行向下n+1行</td></tr></tbody></table><blockquote><p>除此之外，你还可以在命令之前加上数字，表示一次删除多行，如： </p></blockquote><p><code>2dd</code>表示一次删除2行</p><h2 id="复制文本"><a href="#复制文本" class="headerlink" title="复制文本"></a>复制文本</h2><h3 id="常用复制命令"><a href="#常用复制命令" class="headerlink" title="常用复制命令"></a>常用复制命令</h3><table><thead><tr><th>命令</th><th align="center">说明</th></tr></thead><tbody><tr><td><code>yy</code></td><td align="center">复制光标所在行</td></tr><tr><td><code>y1G</code></td><td align="center">复制光标所在行到第一行的所有数据</td></tr><tr><td><code>yG</code></td><td align="center">复制光标所在行到最后一行的所有数据</td></tr><tr><td><code>ynj</code>(n代表数字)</td><td align="center">复制光标所在行向下n+1行</td></tr><tr><td><code>y^</code></td><td align="center">复制至行首</td></tr><tr><td><code>y0</code></td><td align="center">复制至行首</td></tr><tr><td><code>y$</code></td><td align="center">复制至行尾</td></tr><tr><td><code>nyy</code></td><td align="center">复制光标所在行n行</td></tr></tbody></table><h3 id="选中文本进行复制"><a href="#选中文本进行复制" class="headerlink" title="选中文本进行复制"></a>选中文本进行复制</h3><p>要选中内容进行复制，先在命令模式下按  <code>v</code> 进入 可视模式(Visual Mode)，然后用方向键 或 <code>h</code>,<code>j</code>,<code>k</code>,<code>l</code> 选择文本，再按 <code>y</code> 进行复制。</p><h2 id="剪切文本"><a href="#剪切文本" class="headerlink" title="剪切文本"></a>剪切文本</h2><h3 id="常用剪切命令"><a href="#常用剪切命令" class="headerlink" title="常用剪切命令"></a>常用剪切命令</h3><table><thead><tr><th>命令</th><th align="center">说明</th></tr></thead><tbody><tr><td><code>dd</code></td><td align="center">剪切游标所在行整行</td></tr><tr><td><code>d^</code></td><td align="center">剪切至行首</td></tr><tr><td><code>d0</code></td><td align="center">剪切至行首</td></tr><tr><td><code>d$</code></td><td align="center">剪切至行尾</td></tr><tr><td><code>ndd</code></td><td align="center">剪切光标所在行n行</td></tr></tbody></table><h3 id="选中文本进行剪切"><a href="#选中文本进行剪切" class="headerlink" title="选中文本进行剪切"></a>选中文本进行剪切</h3><p>要选中内容进行剪切，先在命令模式下按  <code>v</code> 进入 可视模式(Visual Mode)，然后用方向键 或 <code>h</code>,<code>j</code>,<code>k</code>,<code>l</code> 选择文本，再按 <code>d</code> 进行剪切。</p><h2 id="粘贴文本"><a href="#粘贴文本" class="headerlink" title="粘贴文本"></a>粘贴文本</h2><table><thead><tr><th>命令</th><th align="center">说明</th></tr></thead><tbody><tr><td><code>p</code></td><td align="center">粘贴在光标的下一行</td></tr><tr><td><code>P</code></td><td align="center">粘贴在光标的上一行</td></tr><tr><td><code>np</code></td><td align="center">粘贴在光标的下一行n次</td></tr></tbody></table><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><table><thead><tr><th>命令</th><th align="center">说明</th></tr></thead><tbody><tr><td><code>u</code></td><td align="center">撤销上一步操作</td></tr><tr><td><code>ctrl+r</code></td><td align="center">恢复撤销的操作</td></tr></tbody></table><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>普通模式下 输入<code>/搜索内容</code> 搜索内容 通过<code>n</code>查找下一个通过<code>N</code>查找上一个</p><h2 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h2><p>命令行模式下 输入 `s/原来的内容/要替换的内容/</p><pre><code>:s/abc/xyz/# 把abc替换成xyz</code></pre><blockquote><p>只会替换第一个匹配的字符</p></blockquote><p>命令行模式下 输入 `s/原来的内容/要替换的内容/g</p><pre><code>:s/abc/xyz/g# 把abc替换成xyz</code></pre><blockquote><p>只会替换当前行匹配的字符</p></blockquote><p>命令行模式下 输入 <code>n,m s/原来的内容/要替换的内容/g</code> (n,m) 从第n行到第m行`</p><pre><code>:1,5 s/abc/xyz/g# 把第一到第五行的abc替换成xyz:1,$ s/abc/xyz/g# 把第一到最后一行的abc替换成xyz</code></pre><p>命令行模式下 输入 `% s/原来的内容/要替换的内容/g </p><pre><code>:% s/abc/xyz/g# 将全部的abc替换成xyz</code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swoole 学习笔记</title>
      <link href="/2019/08/08/swoole-xue-xi-bi-ji/"/>
      <url>/2019/08/08/swoole-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="Swoole"><a href="#Swoole" class="headerlink" title="Swoole"></a>Swoole</h2><p>1.准备工作</p><p>1) linux环境下开发<br>2) php7 swoole2.1以上 redis<br>3) 源码安装php7 源码安装swoole</p><p>搭建一个centos 环境</p><p>更新系统 yum install epel-release -y</p><p>更新 软件包 yum update </p><p>安装php依赖组件（包含Nginx依赖）：</p><p>yum -y install wget vim pcre pcre-devel openssl openssl-devel libicu-devel gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel ncurses ncurses-devel curl curl-devel krb5-devel libidn libidn-devel openldap openldap-devel nss_ldap jemalloc-devel cmake boost-devel bison automake libevent libevent-devel gd gd-devel libtool* libmcrypt libmcrypt-devel mcrypt mhash libxslt libxslt-devel readline readline-devel gmp gmp-devel libcurl libcurl-devel openjpeg-devel</p><p>从官网下载php源码包放到centos /opt/work/softpackage/  （我随便放的，不代表一定要放到这里）</p><p>我下载的是tar.bz2格式的压缩包<br>解压命令 tar -xjvf php7.2.2.1.tar.bz2</p><p>cd 进入刚才解压好的文件夹</p><p>通过./configure 来编译php </p><blockquote><p>configure 参数</p></blockquote><p>–prefix=/opt/php //指定 php 安装目录<br>–with-apxs2=/usr/local/apache/bin/apxs //整合Apache<br>–with-config-file-path=/opt/php/etc //指定php.ini位置<br>–with-config-file-scan-dir=/opt/php/etc/php.d //指定额外拓展配置归放处文件夹<br>–enable-safe-mode //打开安全模式<br>–enable-ftp //打开ftp的支持<br>–enable-zip //打开对zip的支持<br>–with-bz2 //打开对bz2文件的支持<br>–with-jpeg-dir //打开对jpeg图片的支持<br>–with-png-dir //打开对png图片的支持<br>–with-freetype-dir //打开对freetype字体库的支持<br>–without-iconv //关闭iconv函数，各种字符集间的转换<br>–with-libXML-dir //打开libxml2库的支持<br>–with-XMLrpc //打开xml-rpc的c语言<br>–with-zlib-dir //打开zlib库的支持<br>–with-gd //打开gd库的支持<br>–enable-gd-native-ttf //支持TrueType字符串函数库<br>–with-curl //打开curl浏览工具的支持<br>–with-curlwrappers //运用curl工具打开url流<br>–with-ttf //打开freetype1.*的支持，可以不加了<br>–with-xsl //打开XSLT 文件支持，扩展了libXML2库 ，需要libxslt软件<br>–with-gettext //打开gnu 的gettext 支持，编码库用到<br>–with-pear //打开pear命令的支持，PHP扩展用的<br>–enable-calendar //打开日历扩展功能<br>–enable-mbstring //多字节，字符串的支持<br>–enable-bcmath //精度计算，解决蛋疼的数字运算精度问题<br>–enable-sockets //打开 sockets 支持<br>–enable-exif //图片的元数据支持<br>–enable-magic-quotes //魔术引用的支持<br>–disable-rpath //关闭额外的运行库文件<br>–disable-debug //关闭调试模式<br>–with-ldap-dir //轻量目录访问协议</p><p>选择两个就可以了</p><p>./configure –prefix=/opt/work/softpackage/php7.2 –with-config-file-path=/opt/work/softpackage/php7.2/etc/php_ini_file/</p><p>Thank you for using PHP.</p><p>config.status: creating php7.spec<br>config.status: creating main/build-defs.h<br>config.status: creating scripts/phpize<br>config.status: creating scripts/man1/phpize.1<br>config.status: creating scripts/php-config<br>config.status: creating scripts/man1/php-config.1<br>config.status: creating sapi/cli/php.1<br>config.status: creating sapi/phpdbg/phpdbg.1<br>config.status: creating sapi/cgi/php-cgi.1<br>config.status: creating ext/phar/phar.1<br>config.status: creating ext/phar/phar.phar.1<br>config.status: creating main/php_config.h<br>config.status: executing default commands</p><p>看到类似上面的字母后 php已经编译完成了</p><p>成功之后 执行make &amp;&amp; make install 去安装</p><p>安装完成后 我们进入到php安装目录下的bin目录</p><p>vim 创建 test.php</p><p>写入 </p><pre><code>&lt;?phpecho &#39;hello world&#39;;</code></pre><p>执行 ./php test.php<br>测试一下php是否安装成功</p><p>成功的话 应该会输出hello world</p><p>我们在来看下php.ini 的位置是否是我们设置好的</p><p>php -i | grep php.ini</p><p>如果出现   /…../etc/php_ini_file 那么证明我们php.ini的位置已经设置好了</p><p>我们回到之前解压的php目录 可以看到里面有两个以php.ini为开头的文件 </p><p>复制php.ini-development 到 我们配置好的php_ini_file</p><p>cp php.ini-development ../softpackage/php7.2/etc/php_ini_file/</p><p>之后我们进入到 php_ini_file 目录 </p><p>执行 mv php.ini-development php.ini</p><p>配置 php 为环境变量</p><p>export PATH=$PATH:/opt/work/softpackage/php7.2/bin/</p><p>//更新配置<br>source /etc/profile</p><p>下载swoole 源码包</p><p>github: <a href="https://github.com/swoole/swoole-src.git" target="_blank" rel="noopener">https://github.com/swoole/swoole-src.git</a></p><p>gitee: <a href="https://gitee.com/swoole/swoole.git" target="_blank" rel="noopener">https://gitee.com/swoole/swoole.git</a> (更快一些)</p><p>执行 命令 git clone <a href="https://github.com/swoole/swoole-src.git" target="_blank" rel="noopener">https://github.com/swoole/swoole-src.git</a></p><p>或者 git clone <a href="https://gitee.com/swoole/swoole.git" target="_blank" rel="noopener">https://gitee.com/swoole/swoole.git</a></p><p>如果没有git 的话<br>通过 yum install git来安装git</p><p>下载之后进入swoole 的文件夹</p><p>执行phpize 来生成configure文件</p><p>执行 ./configure –with-php-config=/opt/work/softpackage/php7.2/bin/php-config</p><p>make &amp;&amp; make install </p><p>当出现 </p><pre><code>Build complete.Don&#39;t forget to run &#39;make test&#39;.Installing shared extensions:     /opt/work/softpackage/php7.2/lib/php/extensions/no-debug-non-zts-20170718/Installing header files:          /opt/work/softpackage/php7.2/include/php/</code></pre><p>我们进入  /opt/work/softpackage/php7.2/lib/php/extensions/no-debug-non-zts-20170718/ (上面的Installing shared extensions)</p><p>如果存在swoole.so 说明swoole 已经成功安装了</p><blockquote><p>cd – 可以回到之前的目录</p></blockquote><p>引入swoole 扩展 配置php.ini文件</p><p>vim /opt/work/softpackage/php7.2/etc/php_ini_file/php.ini</p><p>命令模式下 按 ‘/‘<br>接着输入extension 回车后去查找extension 按下 小写’n’查找下一个 按下大写’N’ 查找上一个</p><p>找到;extension= 按下i切换到插入模式</p><p>输入extension=swoole</p><p>按下esc 输入’:wq’  保存退出</p><p>用 php -m 检测一下</p><p>如果出现swoole 引入成功</p><p>再到我们之前下载的swoole目录里</p><p>进入examples下的server 目录</p><p>运行 vim echo.php 查看echo.php文件</p><p>可以看到里面 实例化了一个swoole_server对象 监听9501端口</p><p>输入 ‘:quit’退出vim</p><p>输入php echo.php 回车</p><p>我们打开另一个terminal 输入<br>netstat -anp|grep 9501</p><pre><code>(Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.)tcp        0      0 0.0.0.0:9501            0.0.0.0:*               LISTEN      121984/php  </code></pre><p>可以看到9501端口已经开启</p><h4 id="创建php文件-编写swoole服务"><a href="#创建php文件-编写swoole服务" class="headerlink" title="创建php文件 编写swoole服务"></a>创建php文件 编写swoole服务</h4><h5 id="TCP-服务器"><a href="#TCP-服务器" class="headerlink" title="TCP 服务器"></a>TCP 服务器</h5><p>创建TCP服务器</p><pre><code>$serv = new swoole_server(&quot;127.0.0.1&quot;,9501);</code></pre><h6 id="swoole-server函数介绍"><a href="#swoole-server函数介绍" class="headerlink" title="swoole_server函数介绍"></a>swoole_server函数介绍</h6><p>参考网址 <a href="https://wiki.swoole.com/wiki/page/14.html" target="_blank" rel="noopener">https://wiki.swoole.com/wiki/page/14.html</a></p><pre><code>$serv = new Server(string $host, int $port = 0, int $mode = SWOOLE_PROCESS,int $sock_type = SWOOLE_SOCK_TCP);</code></pre><p>参数 ：<br>$host参数用来指定监听的ip地址，如127.0.0.1，或者外网地址，或者0.0.0.0监听全部地址<br>    IPv4使用 127.0.0.1表示监听本机，0.0.0.0表示监听所有地址<br>    IPv6使用::1表示监听本机，:: (相当于0:0:0:0:0:0:0:0) 表示监听所有地址</p><p>$port监听的端口，如9501<br>    如果$sock_type为UnixSocket Stream/Dgram，此参数将被忽略<br>    监听小于1024端口需要root权限<br>    如果此端口被占用server-&gt;start时会失败</p><p>$mode运行的模式<br>    SWOOLE_PROCESS多进程模式（默认）<br>    SWOOLE_BASE基本模式</p><p>$sock_type指定Socket的类型，支持TCP、UDP、TCP6、UDP6、UnixSocket Stream/Dgram 6种</p><p>使用$sock_type | SWOOLE_SSL可以启用SSL隧道加密。启用SSL后必须配置ssl_key_file和ssl_cert_file</p><pre><code>//创建server对象 监听9501端口$serv = new swoole_server(&quot;127.0.0.1&quot;,9501);//绑定参数$serv-&gt;set([    &#39;worker_num&#39;=&gt;8,// worker 进程数  cpu核数的一到4倍]);//监听连接进入事件/** *$fd =&gt;客户端连接的唯一标识 *$reactor_id =&gt; 线程id */$serv-&gt;on(&#39;Connect&#39;, function ($serv, $fd,$reactor_id) {      echo &quot;Client: 线程id-&gt;{$reactor_id},唯一标识-&gt;{$fd}\n&quot;;});//监听数据接收事件$serv-&gt;on(&#39;Receive&#39;, function ($serv, $fd, $reactor_id, $data) {    $serv-&gt;send($fd, &quot;Server: 线程id-&gt;{$reactor_id},唯一标识-&gt;{$fd},数据-&gt;{$data}&quot;);});$serv-&gt;on(&#39;close&#39;,function($serv,$fd){    echo &quot;Client: Close.\n&quot;;});$serv-&gt;start();</code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swoole </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>子网掩码划分子网</title>
      <link href="/2019/08/07/zi-wang-yan-ma-hua-fen-zi-wang/"/>
      <url>/2019/08/07/zi-wang-yan-ma-hua-fen-zi-wang/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 子网划分 </category>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 子网划分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>putty样式更改</title>
      <link href="/2019/08/07/putty-yang-shi-geng-gai/"/>
      <url>/2019/08/07/putty-yang-shi-geng-gai/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考网址 <a href="https://www.cnblogs.com/mujingyu/p/7704666.html" target="_blank" rel="noopener">https://www.cnblogs.com/mujingyu/p/7704666.html</a></p></blockquote><h2 id="putty-默认颜色样式修改-for-windows"><a href="#putty-默认颜色样式修改-for-windows" class="headerlink" title="putty 默认颜色样式修改 for windows"></a>putty 默认颜色样式修改 for windows</h2><h3 id="第一点-导出-putty-注册表默认配置文件"><a href="#第一点-导出-putty-注册表默认配置文件" class="headerlink" title="第一点 导出 putty 注册表默认配置文件"></a>第一点 导出 putty 注册表默认配置文件</h3><h4 id="1-1-打开注册表：运行-–-gt-regedit"><a href="#1-1-打开注册表：运行-–-gt-regedit" class="headerlink" title="1.1 打开注册表：运行 –&gt; regedit"></a>1.1 打开注册表：运行 –&gt; regedit</h4><pre><code>找到 putty 注册表文件[HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\Default%20Settings]</code></pre><blockquote><p>注： 保存之后才会出</p></blockquote><h4 id="1-2-右键-Default-20Settings-文件，点击导出至桌面。"><a href="#1-2-右键-Default-20Settings-文件，点击导出至桌面。" class="headerlink" title="1.2 右键 Default%20Settings 文件，点击导出至桌面。"></a>1.2 右键 Default%20Settings 文件，点击导出至桌面。</h4><h3 id="第二点-修改注册表默认配置"><a href="#第二点-修改注册表默认配置" class="headerlink" title="第二点 修改注册表默认配置"></a>第二点 修改注册表默认配置</h3><h4 id="2-1-把导出的-reg-文件用文本方式打开，上面标注的-所有-Colour-值覆盖替换下面的值："><a href="#2-1-把导出的-reg-文件用文本方式打开，上面标注的-所有-Colour-值覆盖替换下面的值：" class="headerlink" title="2.1 把导出的 reg 文件用文本方式打开，上面标注的 所有 Colour 值覆盖替换下面的值："></a>2.1 把导出的 reg 文件用文本方式打开，上面标注的 所有 Colour 值覆盖替换下面的值：</h4><pre><code>&quot;Colour0&quot;=&quot;255,255,255&quot;&quot;Colour1&quot;=&quot;255,255,255&quot;&quot;Colour2&quot;=&quot;51,51,51&quot;&quot;Colour3&quot;=&quot;85,85,85&quot;&quot;Colour4&quot;=&quot;0,0,0&quot;&quot;Colour5&quot;=&quot;0,255,0&quot;&quot;Colour6&quot;=&quot;77,77,77&quot;&quot;Colour7&quot;=&quot;85,85,85&quot;&quot;Colour8&quot;=&quot;187,0,0&quot;&quot;Colour9&quot;=&quot;255,85,85&quot;&quot;Colour10&quot;=&quot;152,251,152&quot;&quot;Colour11&quot;=&quot;85,255,85&quot;&quot;Colour12&quot;=&quot;240,230,140&quot;&quot;Colour13&quot;=&quot;255,255,85&quot;&quot;Colour14&quot;=&quot;205,133,63&quot;&quot;Colour15&quot;=&quot;135,206,235&quot;&quot;Colour16&quot;=&quot;255,222,173&quot;&quot;Colour17&quot;=&quot;255,85,255&quot;&quot;Colour18&quot;=&quot;255,160,160&quot;&quot;Colour19&quot;=&quot;255,215,0&quot;&quot;Colour20&quot;=&quot;245,222,179&quot;&quot;Colour21&quot;=&quot;255,255,255&quot;</code></pre><h4 id="2-2-将配置好文件再导入注册表里就行了。"><a href="#2-2-将配置好文件再导入注册表里就行了。" class="headerlink" title="2.2 将配置好文件再导入注册表里就行了。"></a>2.2 将配置好文件再导入注册表里就行了。</h4>]]></content>
      
      
      <categories>
          
          <category> windows工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows工具 </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++语言学习</title>
      <link href="/2019/08/07/c-yu-yan-xue-xi/"/>
      <url>/2019/08/07/c-yu-yan-xue-xi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c语言深入学习</title>
      <link href="/2019/08/07/c-yu-yan-shen-ru-xue-xi/"/>
      <url>/2019/08/07/c-yu-yan-shen-ru-xue-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h2><h3 id="菜鸟教程-https-www-runoob-com-cprogramming"><a href="#菜鸟教程-https-www-runoob-com-cprogramming" class="headerlink" title="菜鸟教程: https://www.runoob.com/cprogramming"></a>菜鸟教程: <a href="https://www.runoob.com/cprogramming" target="_blank" rel="noopener">https://www.runoob.com/cprogramming</a></h3><h2 id="C-简介"><a href="#C-简介" class="headerlink" title="C 简介"></a>C 简介</h2><blockquote><p>C 语言是一种通用的高级语言，最初是由丹尼斯·里奇在贝尔实验室为开发 UNIX 操作系统而设计的。C 语言最开始是于 1972 年在 DEC PDP-11 计算机上被首次实现。<br>在 1978 年，布莱恩·柯林汉（Brian Kernighan）和丹尼斯·里奇（Dennis Ritchie）制作了 C 的第一个公开可用的描述，现在被称为 K&amp;R 标准。<br>UNIX 操作系统，C编译器，和几乎所有的 UNIX 应用程序都是用 C 语言编写的。由于各种原因，C 语言现在已经成为一种广泛使用的专业语言。</p></blockquote><h2 id="C-程序"><a href="#C-程序" class="headerlink" title="C 程序"></a>C 程序</h2><blockquote><p>一个 C 语言程序，可以是 3 行，也可以是数百万行，它可以写在一个或多个扩展名为 “.c” 的文本文件中，例如，hello.c。您可以使用 “vi”、”vim” 或任何其他文本编辑器来编写您的 C 语言程序。</p></blockquote><h2 id="C11"><a href="#C11" class="headerlink" title="C11"></a>C11</h2><blockquote><p>C11（也被称为C1X）指ISO标准ISO/IEC 9899:2011，是当前最新的C语言标准。在它之前的C语言标准为C99。</p></blockquote><h3 id="新特性"><a href="#新特性" class="headerlink" title="新特性"></a>新特性</h3><blockquote><p>对齐处理（Alignment）的标准化（包括<em>Alignas标志符，alignof运算符，aligned_alloc函数以及&lt;stdalign.h&gt;头文件）。<br><em>Noreturn 函数标记，类似于 gcc 的 __attribute</em></em>((noreturn))。<br>_Generic 关键字。<br>多线程（Multithreading）支持，包括：_Thread_local存储类型标识符，&lt;threads.h&gt;头文件，里面包含了线程的创建和管理函数。_Atomic类型修饰符和&lt;stdatomic.h&gt;头文件。<br>增强的Unicode的支持。基于C Unicode技术报告ISO/IEC TR 19769:2004，增强了对Unicode的支持。包括为UTF-16/UTF-32编码增加了char16_t和char32_t数据类型，提供了包含unicode字符串转换函数的头文件&lt;uchar.h&gt;。<br>删除了 gets() 函数，使用一个新的更安全的函数gets_s()替代。<br>增加了边界检查函数接口，定义了新的安全的函数，例如 fopen_s()，strcat_s() 等等。<br>增加了更多浮点处理宏(宏)。<br>匿名结构体/联合体支持。这个在gcc早已存在，C11将其引入标准。<br>静态断言（Static assertions），_Static_assert()，在解释 #if 和 #error 之后被处理。<br>新的 fopen() 模式，(“…x”)。类似 POSIX 中的 O_CREAT|O_EXCL，在文件锁中比较常用。<br>新增 quick_exit() 函数作为第三种终止程序的方式。当 exit()失败时可以做最少的清理工作。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>逆向工程入门</title>
      <link href="/2019/08/07/ni-xiang-gong-cheng-ru-men/"/>
      <url>/2019/08/07/ni-xiang-gong-cheng-ru-men/</url>
      
        <content type="html"><![CDATA[<h2 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h2><h3 id="第一点"><a href="#第一点" class="headerlink" title="第一点"></a>第一点</h3><h6 id="具备基本的编程能力，如c、c-，c、c-作为很基础的语言，不要求精通，但是必须会写，写个小工具完全没有问题，同时要对c-的类、继承、虚表虚函数等很熟悉，很多游戏都用c-开发，而且比较庞大，只有基础掌握好，才能更好的从汇编层来读懂代码，很多时候我们看单条汇编指令时完全没有问题的，但是一旦组合起来就会完全不知所云了，通过必须对高级语言对应的汇编语言实现要掌握，比如函数工作的原理，几种调用约定、参数传递方式以及返回值等都必须掌握，这方面网上很多资料。最好能懂python，python作为一种脚本语言，可以用来开发许多逆向调试工具的插件，可以帮我们节省很多的体力活。"><a href="#具备基本的编程能力，如c、c-，c、c-作为很基础的语言，不要求精通，但是必须会写，写个小工具完全没有问题，同时要对c-的类、继承、虚表虚函数等很熟悉，很多游戏都用c-开发，而且比较庞大，只有基础掌握好，才能更好的从汇编层来读懂代码，很多时候我们看单条汇编指令时完全没有问题的，但是一旦组合起来就会完全不知所云了，通过必须对高级语言对应的汇编语言实现要掌握，比如函数工作的原理，几种调用约定、参数传递方式以及返回值等都必须掌握，这方面网上很多资料。最好能懂python，python作为一种脚本语言，可以用来开发许多逆向调试工具的插件，可以帮我们节省很多的体力活。" class="headerlink" title="具备基本的编程能力，如c、c++，c、c++作为很基础的语言，不要求精通，但是必须会写，写个小工具完全没有问题，同时要对c++的类、继承、虚表虚函数等很熟悉，很多游戏都用c++开发，而且比较庞大，只有基础掌握好，才能更好的从汇编层来读懂代码，很多时候我们看单条汇编指令时完全没有问题的，但是一旦组合起来就会完全不知所云了，通过必须对高级语言对应的汇编语言实现要掌握，比如函数工作的原理，几种调用约定、参数传递方式以及返回值等都必须掌握，这方面网上很多资料。最好能懂python，python作为一种脚本语言，可以用来开发许多逆向调试工具的插件，可以帮我们节省很多的体力活。"></a>具备基本的编程能力，如c、c++，c、c++作为很基础的语言，不要求精通，但是必须会写，写个小工具完全没有问题，同时要对c++的类、继承、虚表虚函数等很熟悉，很多游戏都用c++开发，而且比较庞大，只有基础掌握好，才能更好的从汇编层来读懂代码，很多时候我们看单条汇编指令时完全没有问题的，但是一旦组合起来就会完全不知所云了，通过必须对高级语言对应的汇编语言实现要掌握，比如函数工作的原理，几种调用约定、参数传递方式以及返回值等都必须掌握，这方面网上很多资料。最好能懂python，python作为一种脚本语言，可以用来开发许多逆向调试工具的插件，可以帮我们节省很多的体力活。</h6><h3 id="第二点"><a href="#第二点" class="headerlink" title="第二点"></a>第二点</h3><h5 id="对windows系统知识比较了解，因为外挂会设计比较多的windows系统知识，因此要对windows底层要一定的掌握，比如windows-api，以及外观常用的注入、钩子技术还有windows系统的异常处理机制等，可以到广海论坛学习外挂常用的较按键精灵、加速齿轮以及注入等同用知识，书籍可以可以参见《windows核心编程》，对底层知识了解越多，分析外挂技术也越容易。3、对逆向分析工具的熟练使用，我们平时工作中面对的是二进制可执行程序，要做外挂我们首先的分析目标程序，因此对常用的调试工具windbg、ollydbg、静态分析工具ida一定要熟练使用。网上教程也比较多，可以到看雪论坛上利用相关的crackme练手学习"><a href="#对windows系统知识比较了解，因为外挂会设计比较多的windows系统知识，因此要对windows底层要一定的掌握，比如windows-api，以及外观常用的注入、钩子技术还有windows系统的异常处理机制等，可以到广海论坛学习外挂常用的较按键精灵、加速齿轮以及注入等同用知识，书籍可以可以参见《windows核心编程》，对底层知识了解越多，分析外挂技术也越容易。3、对逆向分析工具的熟练使用，我们平时工作中面对的是二进制可执行程序，要做外挂我们首先的分析目标程序，因此对常用的调试工具windbg、ollydbg、静态分析工具ida一定要熟练使用。网上教程也比较多，可以到看雪论坛上利用相关的crackme练手学习" class="headerlink" title="对windows系统知识比较了解，因为外挂会设计比较多的windows系统知识，因此要对windows底层要一定的掌握，比如windows api，以及外观常用的注入、钩子技术还有windows系统的异常处理机制等，可以到广海论坛学习外挂常用的较按键精灵、加速齿轮以及注入等同用知识，书籍可以可以参见《windows核心编程》，对底层知识了解越多，分析外挂技术也越容易。3、对逆向分析工具的熟练使用，我们平时工作中面对的是二进制可执行程序，要做外挂我们首先的分析目标程序，因此对常用的调试工具windbg、ollydbg、静态分析工具ida一定要熟练使用。网上教程也比较多，可以到看雪论坛上利用相关的crackme练手学习"></a>对windows系统知识比较了解，因为外挂会设计比较多的windows系统知识，因此要对windows底层要一定的掌握，比如windows api，以及外观常用的注入、钩子技术还有windows系统的异常处理机制等，可以到广海论坛学习外挂常用的较按键精灵、加速齿轮以及注入等同用知识，书籍可以可以参见《windows核心编程》，对底层知识了解越多，分析外挂技术也越容易。3、对逆向分析工具的熟练使用，我们平时工作中面对的是二进制可执行程序，要做外挂我们首先的分析目标程序，因此对常用的调试工具windbg、ollydbg、静态分析工具ida一定要熟练使用。网上教程也比较多，可以到看雪论坛上利用相关的crackme练手学习</h5><h3 id="第三点"><a href="#第三点" class="headerlink" title="第三点"></a>第三点</h3><h5 id="掌握外壳原理和技巧，熟悉常见的加解密算法、反调试技巧，我们分析程序时经常会遇到很多加壳程序，因此我们必须对外壳的原理和基本知识比较熟悉，熟练掌握同用的脱壳技巧，同时对各种反调试技巧也必须要很熟悉，在分析程序时，一般会遇到很多加解密算法，因此必须要对各种加解密算法的特征有一定的快速识别能力，这样能更快得帮助我们分析目标程序的核心功能。这方面可以参看《加密与解密》这本书，讲的非常好与详细"><a href="#掌握外壳原理和技巧，熟悉常见的加解密算法、反调试技巧，我们分析程序时经常会遇到很多加壳程序，因此我们必须对外壳的原理和基本知识比较熟悉，熟练掌握同用的脱壳技巧，同时对各种反调试技巧也必须要很熟悉，在分析程序时，一般会遇到很多加解密算法，因此必须要对各种加解密算法的特征有一定的快速识别能力，这样能更快得帮助我们分析目标程序的核心功能。这方面可以参看《加密与解密》这本书，讲的非常好与详细" class="headerlink" title="掌握外壳原理和技巧，熟悉常见的加解密算法、反调试技巧，我们分析程序时经常会遇到很多加壳程序，因此我们必须对外壳的原理和基本知识比较熟悉，熟练掌握同用的脱壳技巧，同时对各种反调试技巧也必须要很熟悉，在分析程序时，一般会遇到很多加解密算法，因此必须要对各种加解密算法的特征有一定的快速识别能力，这样能更快得帮助我们分析目标程序的核心功能。这方面可以参看《加密与解密》这本书，讲的非常好与详细"></a>掌握外壳原理和技巧，熟悉常见的加解密算法、反调试技巧，我们分析程序时经常会遇到很多加壳程序，因此我们必须对外壳的原理和基本知识比较熟悉，熟练掌握同用的脱壳技巧，同时对各种反调试技巧也必须要很熟悉，在分析程序时，一般会遇到很多加解密算法，因此必须要对各种加解密算法的特征有一定的快速识别能力，这样能更快得帮助我们分析目标程序的核心功能。这方面可以参看《加密与解密》这本书，讲的非常好与详细</h5>]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
          <category> 漏洞挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试-信息收集</title>
      <link href="/2019/08/06/shen-tou-ce-shi-xin-xi-shou-ji/"/>
      <url>/2019/08/06/shen-tou-ce-shi-xin-xi-shou-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="一、基本信息收集"><a href="#一、基本信息收集" class="headerlink" title="一、基本信息收集"></a>一、基本信息收集</h1><h2 id="1-1-Whois查询"><a href="#1-1-Whois查询" class="headerlink" title="1.1 Whois查询"></a>1.1 Whois查询</h2><pre><code>&gt; 根据已知域名反查，分析出此域名的注册人、邮箱、电话等，可通过知道域名注册商对其进行社工，或利用管理员邮箱进行伪装邮件达到欺骗的目的。http://whois.chinaz.com/</code></pre><h5 id="通过Whois查询可以获取网站管理员的手机号码、姓名、邮箱、域名注册商等信息。"><a href="#通过Whois查询可以获取网站管理员的手机号码、姓名、邮箱、域名注册商等信息。" class="headerlink" title="通过Whois查询可以获取网站管理员的手机号码、姓名、邮箱、域名注册商等信息。"></a>通过Whois查询可以获取网站管理员的手机号码、姓名、邮箱、域名注册商等信息。</h5><h6 id="利用查询到网站管理员手机号码、姓名、邮箱通过Whois反查查询出网站管理员所注册过的域名，可以对注册的其他域名进行漏洞挖掘。"><a href="#利用查询到网站管理员手机号码、姓名、邮箱通过Whois反查查询出网站管理员所注册过的域名，可以对注册的其他域名进行漏洞挖掘。" class="headerlink" title="利用查询到网站管理员手机号码、姓名、邮箱通过Whois反查查询出网站管理员所注册过的域名，可以对注册的其他域名进行漏洞挖掘。"></a>利用查询到网站管理员手机号码、姓名、邮箱通过Whois反查查询出网站管理员所注册过的域名，可以对注册的其他域名进行漏洞挖掘。</h6><h2 id="1-2-子域名收集"><a href="#1-2-子域名收集" class="headerlink" title="1.2 子域名收集"></a>1.2 子域名收集</h2><h4 id="当主站挖掘不到漏洞后，利用工具查询网站的子域名，逐个分析每个子站存在的漏洞，对存在的漏洞进行利用。"><a href="#当主站挖掘不到漏洞后，利用工具查询网站的子域名，逐个分析每个子站存在的漏洞，对存在的漏洞进行利用。" class="headerlink" title="当主站挖掘不到漏洞后，利用工具查询网站的子域名，逐个分析每个子站存在的漏洞，对存在的漏洞进行利用。"></a>当主站挖掘不到漏洞后，利用工具查询网站的子域名，逐个分析每个子站存在的漏洞，对存在的漏洞进行利用。</h4><h5 id="layer子域名挖掘机"><a href="#layer子域名挖掘机" class="headerlink" title="layer子域名挖掘机"></a>layer子域名挖掘机</h5><h2 id="1-3-对应IP搜集"><a href="#1-3-对应IP搜集" class="headerlink" title="1.3 对应IP搜集"></a>1.3 对应IP搜集</h2><pre><code>&gt; 查询相关域名对应IP、别名记录等，判断出网站服务器所使用的服务商或服务器IP信息。http://tool.chinaz.com/nslookup/</code></pre><h2 id="2-0-敏感目录"><a href="#2-0-敏感目录" class="headerlink" title="2.0 敏感目录"></a>2.0 敏感目录</h2><h4 id="收集方向："><a href="#收集方向：" class="headerlink" title="收集方向："></a>收集方向：</h4><h4 id="robots-txt、后台目录、安装包、上传目录、mysql管理页面、phpinfo、编辑器"><a href="#robots-txt、后台目录、安装包、上传目录、mysql管理页面、phpinfo、编辑器" class="headerlink" title="robots.txt、后台目录、安装包、上传目录、mysql管理页面、phpinfo、编辑器"></a>robots.txt、后台目录、安装包、上传目录、mysql管理页面、phpinfo、编辑器</h4><h5 id="常用工具：-字典爆破–御剑："><a href="#常用工具：-字典爆破–御剑：" class="headerlink" title="常用工具： 字典爆破–御剑："></a>常用工具： 字典爆破–御剑：</h5><h2 id="3-0、端口扫描"><a href="#3-0、端口扫描" class="headerlink" title="3.0、端口扫描"></a>3.0、端口扫描</h2><p>通过端口扫描可以判断出网站开启的服务，从而通过爆破枚举或者漏洞利用进行突破，进一步提升网站权限，端口扫描也是信息收集必备的操作。</p><p>扫描到的端口也许是网站的一个旁站，可以尝试对旁站进行漏洞探测，但是有些服务开启的端口可能被管理员修改，通过手工判断分析即可（例如开启了8888端口，通过尝试远程桌面连接确定该端口为3389修改过的端口）。</p><p>各服务开启的默认端口：</p><p>21 &gt;&gt; FTP</p><p>22 &gt;&gt; SSH</p><p>23 &gt;&gt; Telnet</p><p>110 &gt;&gt; POP3</p><p>1433 &gt;&gt; Sqlsever</p><p>3306 &gt;&gt; Mysql</p><p>… …</p><p>3389 &gt;&gt;Mstsc</p><p>8080 &gt;&gt;Tomcat/jboss</p><p>9090 &gt;&gt;WebSphere等</p><p>工具 ： ScanPort 御剑 </p><p>注：也可以使用Nmap进行端口扫描，如果网站存在WAF可以通过调节扫描线程或者利用FTP连接工具、SSH连接工具、Mysql连接等工具进行手工探测。</p><h2 id="4-0、旁站C段"><a href="#4-0、旁站C段" class="headerlink" title="4.0、旁站C段"></a>4.0、旁站C段</h2><p>旁站：同服务器其他站点</p><p>C段：同一网段其他服务器</p><p>对于防护比较强的主站，通常是很难挖掘到漏洞的，这时需要查看该站点的旁站，通过探测旁站的漏洞进行利用，从而拿下主站的权限。</p><p>当网站不存在旁站时，就需要进行C段探测（有些网站买断了相邻的几个IP做为分站，如果拿到分站的管理员敏感信息，如密码之类的，可以尝试对主站进行撞库），通过拿下C段中服务器进行ARP欺骗达到劫持域名的效果。</p><h4 id="通过ping等方式获取网站IP，然后进行查询，"><a href="#通过ping等方式获取网站IP，然后进行查询，" class="headerlink" title="通过ping等方式获取网站IP，然后进行查询，"></a>通过ping等方式获取网站IP，然后进行查询，</h4><p><a href="http://s.tool.chinaz.com/same" target="_blank" rel="noopener">http://s.tool.chinaz.com/same</a></p><p>C段–C段查询</p><p><a href="http://www.5kik.com/c/" target="_blank" rel="noopener">http://www.5kik.com/c/</a></p><h2 id="5-0、整站分析"><a href="#5-0、整站分析" class="headerlink" title="5.0、整站分析"></a>5.0、整站分析</h2><h2 id="5-1-服务器类型"><a href="#5-1-服务器类型" class="headerlink" title="5.1 服务器类型"></a>5.1 服务器类型</h2><p>检测服务器平台、版本等，获取后可以制定漏洞挖掘方案（如IIS6.0存在解析漏洞等）</p><p>根据网站后缀名检测网站类型 ping 域名 看服务器类型</p><p>云悉WEB资产梳理</p><p><a href="http://www.yunsee.cn/" target="_blank" rel="noopener">http://www.yunsee.cn/</a></p><p>根据IIS版本判断Windows系统，系统对应版本通过搜索引擎查找。</p><p>注：使用AppScan、WVS等扫描工具也可以判断。</p><h2 id="5-2-网站容器"><a href="#5-2-网站容器" class="headerlink" title="5.2 网站容器"></a>5.2 网站容器</h2><p>搭建网站的服务组件，例如：iis、Apache、nginx、tomcat等，通过网站容器判断存在的漏洞（如：Apache解析漏洞，nginx解析漏洞）。</p><h2 id="5-3-脚本类型"><a href="#5-3-脚本类型" class="headerlink" title="5.3 脚本类型"></a>5.3 脚本类型</h2><p>判断ASP、ASPX、PHP、JSP等</p><p>一、通过修改首页文件后缀查看页面响应判断。</p><p>二、通过搜索框查找相关文章辨别脚本类型。</p><p>在网站搜索框中输入任意字符，查询后，通过浏览器上的URL判断网站脚本类型。</p><p>三、通过爬虫工具爬取网站目录判断网站脚本类型。</p><h2 id="5-4-建站CMS类型"><a href="#5-4-建站CMS类型" class="headerlink" title="5.4 建站CMS类型"></a>5.4 建站CMS类型</h2><p>识别dedecms、phpcms、emlog、帝国cms等，通过网站使用的CMS找取该CMS已经公布的漏洞进行利用，进一步渗透网站。</p><p>云悉在线WEB指纹CMS识别平台</p><h2 id="5-5-数据库类型"><a href="#5-5-数据库类型" class="headerlink" title="5.5 数据库类型"></a>5.5 数据库类型</h2><p>access、sqlserver、mysql、oracle、postgresql等</p><p>通常情况：access–asp mysql–php oracle–jsp sqlserver–aspx</p><p>postgresql–php 数据库的类型判断对于SQL注入必关重要，只有通过知道数据库类型才能进一步对网站进行SQL注入。</p><p>也可以通过端口扫描器扫描出网站开放的端口，然后对应开启的数据库类型。</p><p>各端口对应数据库类型：</p><p>1433–sql server 3306–mysql oracle–1521 postgresql–5432</p><p>access–默认不开放连接端口，数据库存储在FTP服务器上。</p><p>端口扫描判断数据库类型的方法较为准确，但是管理员也可能选择不开放外网数据库端口，开放内网的数据库端口，也有些管理员喜欢使用站库分离的方法或者使用WAF进行拦截端口扫描来防护站点，这样我们通过端口扫描判断数据库类型的方法便有些失效了。</p><h2 id="5-6-WAF"><a href="#5-6-WAF" class="headerlink" title="5.6 WAF"></a>5.6 WAF</h2><p>判断安全狗、阿里云云盾、360网站卫士、护卫神等WEB应用程序防火墙，便于采取绕过WAF的办法。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
            <tag> web安全 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/08/06/hello-world/"/>
      <url>/2019/08/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>云服务器搭建宝塔面板</title>
      <link href="/2019/03/21/yun-fu-wu-qi-da-jian-bao-ta-mian-ban/"/>
      <url>/2019/03/21/yun-fu-wu-qi-da-jian-bao-ta-mian-ban/</url>
      
        <content type="html"><![CDATA[<h1 id="云服务器搭建宝塔"><a href="#云服务器搭建宝塔" class="headerlink" title="云服务器搭建宝塔"></a>云服务器搭建宝塔</h1><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><p>一台云服务器 (阿里 腾讯 百度 都行)</p><p>ssh 远程连接工具 或者直接管理服务器也行</p><h2 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h2><blockquote><p>安装要求：<br>内存：512M以上，推荐768M以上（纯面板约占系统60M内存）<br>硬盘：100M以上可用硬盘空间（纯面板约占20M磁盘空间）<br>系统：CentOS 7.1+ (Ubuntu16.04+.、Debian9.0+)，确保是干净的操作系统，没有安装过其它环境带的Apache/Nginx/php/MySQL（已有环境不可安装）</p></blockquote><p>centos 下</p><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> -y <span class="token function">wget</span> <span class="token operator">&amp;&amp;</span> <span class="token function">wget</span> -O install.sh \http://download.bt.cn/install/install_6.0.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> install.sh</code></pre><p>Ubuntu/Deepin安装命令：</p><pre><code>wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh\&amp;&amp; sudo bash install.sh</code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 宝塔面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10搭建Linux环境(linux子系统)</title>
      <link href="/2019/03/21/win10-da-jian-linux-huan-jing-linux-zi-xi-tong/"/>
      <url>/2019/03/21/win10-da-jian-linux-huan-jing-linux-zi-xi-tong/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a><center><font size="20px" color="red">Linux</font></center></h1><hr><h5 id="以下文档都是我亲自测试过的除了xampp那块"><a href="#以下文档都是我亲自测试过的除了xampp那块" class="headerlink" title="以下文档都是我亲自测试过的除了xampp那块"></a><font color="blue">以下文档都是我亲自测试过的除了xampp那块</font></h5><h2 id="设置root密码"><a href="#设置root密码" class="headerlink" title="设置root密码"></a><font color="green">设置root密码</font></h2><pre><code>sudo passwd     orsudo passwd root</code></pre><h2 id="切换root身份"><a href="#切换root身份" class="headerlink" title="切换root身份"></a><font color="green">切换root身份</font></h2><pre><code>su -    or su root</code></pre><h2 id="配置-ssh"><a href="#配置-ssh" class="headerlink" title="配置 ssh"></a><font color="green">配置 ssh</font></h2><h5 id="以root身份输入"><a href="#以root身份输入" class="headerlink" title="以root身份输入"></a>以root身份输入</h5><pre><code>service ssh start#如果出现如下情况#Starting OpenBSD Secure Shell server sshd #Could not load host key: /etc/ssh/ssh_host_rsa_key#Could not load host key: /etc/ssh/ssh_host_ecdsa_key#Could not load host key: /etc/ssh/ssh_host_ed25519_key#那么就需要重新 生成keydpkg-reconfigure openssh-server#之后再运行service ssh start#检测ssh状态service ssh status#如果连接出现(server sent publickey)#该问题是由于ssh链接未允许远程密码认证导致的#通过管理控制台进入系统，cat 查看 /etc/ssh/sshd_config配置文件中是否包含以下配置 PasswordAuthentication no #通过vim编辑器将该参数改成yes，如下 PasswordAuthentication yes #清除keyssh-keygen -R ip#登录时，如果root用户不能登录#通过管理控制台进入系统，cat 查看 /etc/ssh/sshd_config配置文件中是否包含以下配置 PermitRootLogin no #通过vim编辑器将该参数改成yes，如下 PermitRootLogin yes 保存，然后重启ssh服务 service sshd restart#不要忘了，还要配置防火墙开启端口才能被其他PC访问#打开 Win10 防火墙设置#(可以通过右下角有个向上的箭头点击盾牌快速进入面板)#Windows Defender 安全中心,点击下方的高级设置#选择左侧入站规则 然后点击右侧 新建规则 #选择 端口 -&gt; tcp -&gt; 特定端口 -&gt; 填入刚刚设置的 Port 默认 22 -&gt; 允许连接 -&gt; 提交#连接的网络根据你本地的网络连接情况选择，搞不清楚就公用、专用全选好了，端口添加后即可正常访问了，现在可以通过XShell 或其他终端连接试试了</code></pre><p>如果使用Android手机，推荐看看这篇文章安装APP 即可操作<br><a href="https://blog.csdn.net/zhouzme/article/details/81084661" target="_blank" rel="noopener">https://blog.csdn.net/zhouzme/article/details/81084661</a></p><h2 id="配置-FTP"><a href="#配置-FTP" class="headerlink" title="配置 FTP"></a><font color="green">配置 FTP</font></h2><p>首先安装ftp</p><pre><code>#更新本地源# 编辑源sudo vim /etc/apt/sources.list# 修改为deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiverse # 更新sudo apt-get updatesudo apt-get dist-upgrade#安装ftpsudo apt-get -y install vsftpd</code></pre><p>如果说出现</p><pre><code>Reading package lists... DoneBuilding dependency treeReading state information... Donevsftpd is already the newest version (3.0.3-9build1).The following package was automatically installed and is no longer required:  libfreetype6Use &#39;sudo apt autoremove&#39; to remove it.0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.</code></pre><p>说明你电脑已经安装过了或者已经是最新版</p><pre><code>#启动ftpsudo service vsftpd start#修改配置文件 sudo vim /etc/vsftpd.conf    #开启监听    listen YES    #是否允许用户匿名登录    anonymous_enable=YES    #允许本地用户登录    local_enable=YES    #设置匿名用户登录的目录    anon_root=/home/moshang/anonFtp/    #实名用户拥有写入权限    write_enable=YES    #设置本地掩码为022    local_umask=022    #允许匿名用户上传数据    anon_upload_enable=YES    #匿名用户可以创建目录    anon_mkdir_write_enable=YES#重启服务器sudo service vsftpd restart   </code></pre><p>最好使用匿名用户登录，不要轻易暴露你的密码</p><pre><code>#命令行下ftp serverip#匿名用户 (只限操作自己的目录)user:anonymouspasswd:直接回车#实名用户(可以操作/目录和其他目录)user:自己的用户名passwd:自己的密码#上传文件put file#下载文件get file</code></pre><p><del>#创建FTP用户组ftp-users<br>groupadd ftp-users</del></p><p><del>#创建用户组目录ftp-docs<br>mkdir /home/ftp-docs</del></p><p><del>#修改权限<br>chmod -R 750 /home/ftp-docs</del></p><p><del>#750组只能读不能写，要组能写，请改成770或760</del></p><p><del>指定文件夹归属用户和用户组<br>chown root:ftp-users /home/ftp-docs</del></p><p><del>#添加FTP用户并为他们设置缺省目录<br>useradd -g ftp-users -d /home/ftp-docs</del> </p><p><del>#设置密码passwd user1</del></p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a><font color="green" size="10px">配置环境</font></h2><h3 id="Lampp"><a href="#Lampp" class="headerlink" title="Lampp"></a><font color="green" size="8px">Lampp</font></h3><p>站点域名的话就不要想了，没法用，建立两个项目除非分配端口</p><blockquote><p><font size="6px">安装apache</font></p><pre><code>sudo apt-get -y install apache2</code></pre><p>启动apache2</p><pre><code>sudo service apache2 start</code></pre><p>命令行访问</p><pre><code>curl server ip //curl 192.168.1.109</code></pre></blockquote><p>#如果有返回html标签的数据，说明可以访问了</p><pre><code>&gt;&lt;font size=&quot;6px&quot;&gt;安装mysql</code></pre><p>sudo apt install mysql-server-5.7</p><p>#回车后会让你设置mysql密码</p><pre><code>&gt;启动mysql</code></pre><p>service mysql start<br>如果出现<br>No directory, logging in with HOME=/</p><p>#运行<br>sudo service mysql stop</p><p>sudo usermod -d /var/lib/mysql/ mysql<br>service mysql start</p><pre><code>&gt;登录mysql</code></pre><p>mysql -uroot -p</p><p>#输入设置的密码登录</p><pre><code>&gt;如果说用navicat或者小海豚连接时连不上</code></pre><p>#原因是mysql没有开启所有人可访问权限</p><p>#解决方法<br>mysql -uroot –p<br>mysql&gt;use mysql;<br>mysql&gt;update user set host = ‘%’ where user = ‘root’;<br>mysql&gt;select host, user from user;<br>mysql&gt;FLUSH PRIVILEGES;<br>修改MySQL的配置文件/etc/mysql/mysql.conf.d/my.cnf，因为默认3306端口只允许本地访问的，注释掉这行</p><pre><code>&gt;mysql无法启动</code></pre><p>ps -ef | grep mysql //查看正在运行的服务<br>kill -9 [pid]       //停止运行的服务 </p><pre><code>&gt;彻底删除mysql(对mysql配置文件的改动超出自己的能力范围时)</code></pre><p>#首先在终端中查看MySQL的依赖项:<br>dpkg –list|grep mysql</p><pre><code></code></pre><p>#卸载:<br>sudo apt-get remove mysql-common</p><pre><code></code></pre><p>#卸载:<br>sudo apt-get autoremove –purge mysql-server-5.7</p><pre><code></code></pre><p>#清除残留数据:<br>dpkg -l|grep ^rc|awk ‘{print$2}’|sudo xargs dpkg -P</p><pre><code></code></pre><p>#再次查看MySQL的剩余依赖项:<br>dpkg –list|grep mysql</p><pre><code></code></pre><p>继续删除剩余依赖项，如：sudo apt-get autoremove –purge –name–</p><pre><code></code></pre><p>#至此已经没有了MySQL的依赖项，彻底删除，Good Luck</p><pre><code>&gt;&lt;font size=&quot;6px&quot;&gt;安装php</code></pre><p>检测一下本地是否存在php环境<br>php -v </p><p>#出现php版本号的话，卸载</p><pre><code>&gt;一、删除php的相关包及配置</code></pre><p>sudo apt-get autoremove php7*</p><pre><code>&gt;二、删除关联</code></pre><p>sudo find /etc -name “<em>php</em>“ |xargs  rm -rf </p><pre><code>&gt;三、清除dept列表</code></pre><p>sudo apt purge <code>dpkg -l | grep php| awk &#39;{print $2}&#39; |tr &quot;\n&quot; &quot; &quot;</code></p><pre><code>&gt;四、检查是否卸载干净（无返回就是卸载完成）</code></pre><p>dpkg -l | grep php7.0</p><pre><code>&gt;开始安装php</code></pre><p>sudo apt install php-fpm php-mysql</p><pre><code>&gt;查看php版本</code></pre><p>php -v</p><pre><code>&gt;安装所需依赖</code></pre><p>sudo apt-get install libapache2-mod-php<br>sudo a2enmod<br>php + 安装的版本号</p><pre><code>```shellcd /var/www/htmltouch phpinfo.phpvim phpinfo.php键盘i输入&lt;?php phpinfo();?&gt;键盘escshift + 英文:wq保存退出浏览器输入 服务器ip/phpinfo.php访问PHP installation complete</code></pre><h3 id="Xampp"><a href="#Xampp" class="headerlink" title="Xampp"></a><font color="green" size="8px">Xampp</font></h3><blockquote><p><font size="6px">配置xampp</font></p><pre><code></code></pre></blockquote><p>#下载文件<br>wget <a href="https://www.apachefriends.org/xampp-files/7.3.0/xampp-linux-x64-7.3.0-0-installer.run" target="_blank" rel="noopener">https://www.apachefriends.org/xampp-files/7.3.0/xampp-linux-x64-7.3.0-0-installer.run</a></p><p>chmod 770 ./xampp-linux-x64-7.3.0-0-installer.run //修改权限加入执行权限</p><p>./xampp-linux-x64-7.3.0-0-installer.run //运行<br>Xampp installation complete</p><pre><code>&gt;&lt;font size =&quot;4px&quot;&gt;各配置文件目录：&gt;Apache文档根目录：/opt/lampp/htdocs/&gt;Apache配置文件：/opt/lampp/etc/httpd.conf&gt;MySQL配置文件：/opt/lampp/etc/my.cnf&gt;PHP配置文件：/opt/lampp/etc/php.ini&gt;ProFTPD配置文件：/opt/lampp/etc/proftpd.conf&gt;PHPMyadmin配置文件：/opt/lampp/phpmyadmin/config.inc.php&gt;&lt;font size =&quot;4px&quot;&gt;常用XAMPP命令（在终端以root输入）：&gt;启动/停止/重启Apache：</code></pre><p>/opt/lampp/lampp start/stop/restart(包括启动/停止/重启了mysql,proftpd)</p><pre><code>&gt;安全设置：/opt/lampp/lampp security&gt;使用php版本/查看版本：</code></pre><p>/opt/lampp/lampp php4(5)/phpstatus</p><pre><code>&gt;只启动和停止Apache：</code></pre><p>/opt/lampp/lampp startapache/stopapache</p><pre><code>&gt;只启动和停止MySQL：</code></pre><p>/opt/lampp/lampp startmysql/stopmysql</p><pre><code>&gt;只启动和停止ProFTPD服务器：</code></pre><p>/opt/lampp/lampp startftp/stopftp</p><pre><code>&gt;启动和停止Apache的SSL支持：</code></pre><p>/opt/lampp/lampp startssl/stopssl</p><pre><code>&gt;随系统自启动：</code></pre><p>ln –s /opt/lampp/lampp/etc/rc.d/rc3.d/S99lampp</p><p>ln –s /opt/lampp/lampp/etc/rc.d/rc4.d/S99lampp</p><p>ln –s /opt/lampp/lampp/etc/rc.d/rc5.d/S99lampp</p><pre><code>&gt;取消自启动：</code></pre><p>ln –s /opt/lampp/lampp K01lampp</p><pre><code>&gt;卸载XAMPP：</code></pre><p>rm –rf /opt/lampp</p><pre><code>--------------------- ~~&lt;font color=&quot;green&quot;&gt;配置docker&lt;/font&gt;~~</code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> win10 </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo + github搭建个人博客</title>
      <link href="/2019/03/21/hexo-github-da-jian-ge-ren-bo-ke/"/>
      <url>/2019/03/21/hexo-github-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="github-hexo搭建博客"><a href="#github-hexo搭建博客" class="headerlink" title="github + hexo搭建博客"></a>github + hexo搭建博客</h1><h2 id="环境及工具"><a href="#环境及工具" class="headerlink" title="环境及工具"></a>环境及工具</h2><pre><code>git  nodejs hexo </code></pre><h3 id="1-1-安装git"><a href="#1-1-安装git" class="headerlink" title="1.1 安装git"></a>1.1 安装git</h3><pre><code>[git下载](https://www.git-scm.com/download/)</code></pre><h3 id="1-2-安装nodejs"><a href="#1-2-安装nodejs" class="headerlink" title="1.2 安装nodejs"></a>1.2 安装nodejs</h3><pre><code>[nodejs](http://nodejs.cn/download/)wget https://nodejs.org/dist/v9.3.0/node-v9.3.0-linux-x64.tar.xzxz -d node-v9.3.0-linux-x64.tar.xz</code></pre><p>tar -xf node-v9.3.0-linux-x64.tar</p><p>ln -s ~/node-v9.3.0-linux-x64/bin/node /usr/bin/node<br>ln -s ~/node-v9.3.0-linux-x64/bin/npm /usr/bin/npm</p><p>测试</p><p>node -v<br>npm -v</p><h3 id="1-3安装hexo-使用下面的命令来下载和安装-Hexo"><a href="#1-3安装hexo-使用下面的命令来下载和安装-Hexo" class="headerlink" title="1.3安装hexo 使用下面的命令来下载和安装 Hexo"></a>1.3安装hexo 使用下面的命令来下载和安装 Hexo</h3><pre><code>npm install hexo-cli -g//或者npm install hexo -g --no-optional</code></pre><blockquote><p>这里 -g 代表全局安装，这样 hexo 包将放在 /usr/local/lib/node_modules (Windows 位于 ~/AppData/Roaming/npm/node_modules)，不带的话是本地安装，将放在当前目录的 node_modules 下</p></blockquote><h3 id="1-4-注册github账号"><a href="#1-4-注册github账号" class="headerlink" title="1.4 注册github账号"></a>1.4 注册github账号</h3><p>   <a href="https://github.com/signup" target="_blank" rel="noopener">https://github.com/signup</a></p><h3 id="1-5-创建github仓库"><a href="#1-5-创建github仓库" class="headerlink" title="1.5 创建github仓库"></a>1.5 创建github仓库</h3><blockquote><p>   以自己的用户名 + github.io 来命名 </p></blockquote><h2 id="二、在本地创建博客"><a href="#二、在本地创建博客" class="headerlink" title="二、在本地创建博客"></a>二、在本地创建博客</h2><blockquote><p>(在之后hexo的命令我都用的简写)</p></blockquote><h3 id="1-初始化博客环境"><a href="#1-初始化博客环境" class="headerlink" title="1. 初始化博客环境"></a>1. 初始化博客环境</h3><p>首先建立一个文件夹 作为博客的根目录 然后进入该目录在命令行中执行</p><pre><code>// 初始化hexo环境hexo init// 使用npm安装所需的组件npm install</code></pre><h3 id="2-发表一篇新文章"><a href="#2-发表一篇新文章" class="headerlink" title="2. 发表一篇新文章"></a>2. 发表一篇新文章</h3><blockquote><p>我们可以使用下面命令来创建一篇新的文章，或者直接将文章放到 &lt;博客根目录&gt;/source/_posts 目录里</p></blockquote><pre><code>hexo new  &quot;文章标题&quot;</code></pre><h3 id="3-生成博客静态网页"><a href="#3-生成博客静态网页" class="headerlink" title="3. 生成博客静态网页"></a>3. 生成博客静态网页</h3><blockquote><p>使用下面命令将 source 文件生成静态网页，生成的文件放在<blog_root>/public 目录下</blog_root></p></blockquote><pre><code>hexo  g</code></pre><h3 id="4-将网页发布到server端"><a href="#4-将网页发布到server端" class="headerlink" title="4. 将网页发布到server端"></a>4. 将网页发布到server端</h3><pre><code>hexo s</code></pre><blockquote><p>最后我们就可以通过浏览器访问服务器网页。这里我们没配置server信息，所以server其实是本机（<a href="http://localhost:4000）" target="_blank" rel="noopener">http://localhost:4000）</a></p></blockquote><h2 id="三、部署到码云"><a href="#三、部署到码云" class="headerlink" title="三、部署到码云"></a>三、部署到码云</h2><blockquote><p>首先在全局配置文件 _config.yml 里的 deploy 部分进行配置，其中 repo为你的github pages对应的仓库地址（yourname.github.io )：</p></blockquote><p>需要安装一个git插件</p><pre><code>deploy:  type: git  repo: https://.........git  branch: master</code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos搭建PHP环境</title>
      <link href="/2019/03/18/centos-da-jian-php-huan-jing/"/>
      <url>/2019/03/18/centos-da-jian-php-huan-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="centos上搭建php开发环境"><a href="#centos上搭建php开发环境" class="headerlink" title="centos上搭建php开发环境"></a>centos上搭建php开发环境</h1><h2 id="安装apache"><a href="#安装apache" class="headerlink" title="安装apache"></a>安装apache</h2><pre class=" language-bash"><code class="language-bash">yum -y <span class="token function">install</span> httpd</code></pre><h2 id="开启apache服务"><a href="#开启apache服务" class="headerlink" title="开启apache服务"></a>开启apache服务</h2><pre class=" language-bash"><code class="language-bash">systemctl start httpd.service</code></pre><h2 id="设置apache开机启动"><a href="#设置apache开机启动" class="headerlink" title="设置apache开机启动"></a>设置apache开机启动</h2><pre class=" language-bash"><code class="language-bash">systemctl <span class="token function">enable</span> httpd.service</code></pre><h2 id="安装php"><a href="#安装php" class="headerlink" title="安装php"></a>安装php</h2><pre class=" language-bash"><code class="language-bash">yum -y <span class="token function">install</span> php</code></pre><h2 id="重启apache服务"><a href="#重启apache服务" class="headerlink" title="重启apache服务"></a>重启apache服务</h2><pre class=" language-bash"><code class="language-bash">systemctl restart httpd 或者 systemctl restart httpd.service</code></pre><p>然后，你可以写一个php文件在浏览器中运行一下了;</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /var/www/html/info.php</code></pre><pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span> <span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter">?></span></code></pre><p>然后，在自己电脑浏览器输入 192.168.1.1/info.php<br>运行，会出现php的一些信息</p><h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><pre class=" language-bash"><code class="language-bash">yum -y <span class="token function">install</span> mariadb-service mariadb</code></pre><h2 id="开启mysql服务"><a href="#开启mysql服务" class="headerlink" title="开启mysql服务"></a>开启mysql服务</h2><pre class=" language-bash"><code class="language-bash">systemctl start mariadb.service</code></pre><h2 id="设置开机启动MySQL服务"><a href="#设置开机启动MySQL服务" class="headerlink" title="设置开机启动MySQL服务"></a>设置开机启动MySQL服务</h2><pre class=" language-bash"><code class="language-bash">systemctl <span class="token function">enable</span> mariadb.service</code></pre><h2 id="设置root帐户的密码"><a href="#设置root帐户的密码" class="headerlink" title="设置root帐户的密码"></a>设置root帐户的密码</h2><pre class=" language-bash"><code class="language-bash">mysql_secure_installation</code></pre><blockquote><p>然后会出现一串东西，可以仔细读一下，如果你懒得读，就在提示出来的时候，按Enter就好了，让你设置密码的时候，你就输入你想要的密码就行，然后继续在让你选择y/n是，Enter就好了；当一切结束的时候，你可以输入</p></blockquote><pre class=" language-bash"><code class="language-bash">mysql -uroot -p</code></pre><p>验证一下</p><h2 id="将PHP和MySQL关联起来"><a href="#将PHP和MySQL关联起来" class="headerlink" title="将PHP和MySQL关联起来"></a>将PHP和MySQL关联起来</h2><pre class=" language-bash"><code class="language-bash">yum search php</code></pre><p>yum -y install php-mysql</p><h2 id="安装常用的PHP模块"><a href="#安装常用的PHP模块" class="headerlink" title="安装常用的PHP模块"></a>安装常用的PHP模块</h2><pre class=" language-bash"><code class="language-bash">yum -y <span class="token function">install</span> php-gd php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-snmp php-soap curl curl-devel</code></pre><h2 id="重启apache服务-1"><a href="#重启apache服务-1" class="headerlink" title="重启apache服务"></a>重启apache服务</h2><pre class=" language-bash"><code class="language-bash">systemctl restart httpd.service</code></pre><blockquote><p>然后，再次在浏览器中运行info.php，你会看到安装的模块的信息；<br>至此，LAMP环境就搭建好了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
